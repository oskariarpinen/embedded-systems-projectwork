
Uno-project-work.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00000b7e  2**0
                  ALLOC, LOAD, DATA
  1 .text         000000ce  00000000  00000000  000000d4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000006  00800100  00800100  00000b7e  2**0
                  ALLOC
  3 .comment      0000005b  00000000  00000000  00000b7e  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 00000040  00000000  00000000  00000bd9  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000cfc  00000000  00000000  00000c19  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000007f2  00000000  00000000  00001915  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000003e8  00000000  00000000  00002107  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000000d4  00000000  00000000  000024f0  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000208  00000000  00000000  000025c4  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000003a9  00000000  00000000  000027cc  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000030  00000000  00000000  00002b75  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .text         00000004  00000a88  00000a88  00000b5c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 13 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00002ba8  2**2
                  CONTENTS, READONLY, DEBUGGING
 14 .text.USART_init 0000001e  00000a32  00000a32  00000b06  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 15 .text.USART_Transmit 0000000e  00000a6c  00000a6c  00000b40  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 16 .text.USART_Receive 0000000e  00000a7a  00000a7a  00000b4e  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 17 .text.__vector_11 0000001c  00000a50  00000a50  00000b24  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 18 .progmemx.data 000000f3  000000ce  000000ce  000001a2  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, PROGMEMX
 19 .text.main    00000222  0000060a  0000060a  000006de  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 20 .data.uart_input 0000000f  00800106  00000a8c  00000b60  2**0
                  CONTENTS, ALLOC, LOAD, DATA
 21 .data.uart_output 0000000f  00800115  00000a9b  00000b6f  2**0
                  CONTENTS, ALLOC, LOAD, DATA
 22 .bss.g_STATE  00000001  00800124  00800124  00000b7e  2**0
                  ALLOC
 23 .text.avrlibc 0000002e  00000a04  00000a04  00000ad8  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 24 .text.avrlibc 00000448  000001c2  000001c2  00000296  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 25 .text.avrlibc 00000036  00000998  00000998  00000a6c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 26 .text.avrlibc 00000078  000008e8  000008e8  000009bc  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 27 .text.avrlibc 000000bc  0000082c  0000082c  00000900  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 28 .text.libgcc.prologue 00000038  00000960  00000960  00000a34  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 29 .text.libgcc.prologue 00000036  000009ce  000009ce  00000aa2  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 3d 00 	jmp	0x7a	; 0x7a <__ctors_end>
   4:	0c 94 44 05 	jmp	0xa88	; 0xa88 <__bad_interrupt>
   8:	0c 94 44 05 	jmp	0xa88	; 0xa88 <__bad_interrupt>
   c:	0c 94 44 05 	jmp	0xa88	; 0xa88 <__bad_interrupt>
  10:	0c 94 44 05 	jmp	0xa88	; 0xa88 <__bad_interrupt>
  14:	0c 94 44 05 	jmp	0xa88	; 0xa88 <__bad_interrupt>
  18:	0c 94 44 05 	jmp	0xa88	; 0xa88 <__bad_interrupt>
  1c:	0c 94 44 05 	jmp	0xa88	; 0xa88 <__bad_interrupt>
  20:	0c 94 44 05 	jmp	0xa88	; 0xa88 <__bad_interrupt>
  24:	0c 94 44 05 	jmp	0xa88	; 0xa88 <__bad_interrupt>
  28:	0c 94 44 05 	jmp	0xa88	; 0xa88 <__bad_interrupt>
  2c:	0c 94 28 05 	jmp	0xa50	; 0xa50 <__vector_11>
  30:	0c 94 44 05 	jmp	0xa88	; 0xa88 <__bad_interrupt>
  34:	0c 94 44 05 	jmp	0xa88	; 0xa88 <__bad_interrupt>
  38:	0c 94 44 05 	jmp	0xa88	; 0xa88 <__bad_interrupt>
  3c:	0c 94 44 05 	jmp	0xa88	; 0xa88 <__bad_interrupt>
  40:	0c 94 44 05 	jmp	0xa88	; 0xa88 <__bad_interrupt>
  44:	0c 94 44 05 	jmp	0xa88	; 0xa88 <__bad_interrupt>
  48:	0c 94 44 05 	jmp	0xa88	; 0xa88 <__bad_interrupt>
  4c:	0c 94 44 05 	jmp	0xa88	; 0xa88 <__bad_interrupt>
  50:	0c 94 44 05 	jmp	0xa88	; 0xa88 <__bad_interrupt>
  54:	0c 94 44 05 	jmp	0xa88	; 0xa88 <__bad_interrupt>
  58:	0c 94 44 05 	jmp	0xa88	; 0xa88 <__bad_interrupt>
  5c:	0c 94 44 05 	jmp	0xa88	; 0xa88 <__bad_interrupt>
  60:	0c 94 44 05 	jmp	0xa88	; 0xa88 <__bad_interrupt>
  64:	0c 94 44 05 	jmp	0xa88	; 0xa88 <__bad_interrupt>

00000068 <.dinit>:
  68:	01 00       	.word	0x0001	; ????
  6a:	01 06       	cpc	r0, r17
  6c:	80 01       	movw	r16, r0
  6e:	06 01       	movw	r0, r12
  70:	24 00       	.word	0x0024	; ????
  72:	0a 8c       	ldd	r0, Y+26	; 0x1a
  74:	01 24       	eor	r0, r1
  76:	01 25       	eor	r16, r1
  78:	80 00       	.word	0x0080	; ????

0000007a <__ctors_end>:
  7a:	11 24       	eor	r1, r1
  7c:	1f be       	out	0x3f, r1	; 63
  7e:	cf ef       	ldi	r28, 0xFF	; 255
  80:	d8 e0       	ldi	r29, 0x08	; 8
  82:	de bf       	out	0x3e, r29	; 62
  84:	cd bf       	out	0x3d, r28	; 61

00000086 <__do_copy_data>:
  86:	e8 e6       	ldi	r30, 0x68	; 104
  88:	f0 e0       	ldi	r31, 0x00	; 0
  8a:	40 e0       	ldi	r20, 0x00	; 0
  8c:	17 c0       	rjmp	.+46     	; 0xbc <__do_clear_bss+0x8>
  8e:	b5 91       	lpm	r27, Z+
  90:	a5 91       	lpm	r26, Z+
  92:	35 91       	lpm	r19, Z+
  94:	25 91       	lpm	r18, Z+
  96:	05 91       	lpm	r16, Z+
  98:	07 fd       	sbrc	r16, 7
  9a:	0c c0       	rjmp	.+24     	; 0xb4 <__do_clear_bss>
  9c:	95 91       	lpm	r25, Z+
  9e:	85 91       	lpm	r24, Z+
  a0:	ef 01       	movw	r28, r30
  a2:	f9 2f       	mov	r31, r25
  a4:	e8 2f       	mov	r30, r24
  a6:	05 90       	lpm	r0, Z+
  a8:	0d 92       	st	X+, r0
  aa:	a2 17       	cp	r26, r18
  ac:	b3 07       	cpc	r27, r19
  ae:	d9 f7       	brne	.-10     	; 0xa6 <__do_copy_data+0x20>
  b0:	fe 01       	movw	r30, r28
  b2:	04 c0       	rjmp	.+8      	; 0xbc <__do_clear_bss+0x8>

000000b4 <__do_clear_bss>:
  b4:	1d 92       	st	X+, r1
  b6:	a2 17       	cp	r26, r18
  b8:	b3 07       	cpc	r27, r19
  ba:	e1 f7       	brne	.-8      	; 0xb4 <__do_clear_bss>
  bc:	e9 37       	cpi	r30, 0x79	; 121
  be:	f4 07       	cpc	r31, r20
  c0:	31 f7       	brne	.-52     	; 0x8e <__do_copy_data+0x8>
  c2:	0e 94 05 03 	call	0x60a	; 0x60a <main>
  c6:	0c 94 65 00 	jmp	0xca	; 0xca <_exit>

000000ca <_exit>:
  ca:	f8 94       	cli

000000cc <__stop_program>:
  cc:	ff cf       	rjmp	.-2      	; 0xcc <__stop_program>

Disassembly of section .text:

00000a88 <__bad_interrupt>:
 a88:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

Disassembly of section .text.USART_init:

00000a32 <USART_init>:

static void
USART_init(uint16_t ubrr) // unsigned int
{
	/* Set baud rate in the USART Baud Rate Registers (UBRR) */
	UBRR0H = (unsigned char) (ubrr >> 8);
 a32:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7f80c5>
	UBRR0L = (unsigned char) ubrr;
 a36:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7f80c4>
	
	/* Enable receiver and transmitter on RX0 and TX0 */
	UCSR0B |= (1 << RXEN0) | (1 << TXEN0); //NOTE: the ATmega328p has 1 UART: 0
 a3a:	e1 ec       	ldi	r30, 0xC1	; 193
 a3c:	f0 e0       	ldi	r31, 0x00	; 0
 a3e:	80 81       	ld	r24, Z
 a40:	88 61       	ori	r24, 0x18	; 24
 a42:	80 83       	st	Z, r24
	// UCSR0B |= (1 << 4) | (1 << 3);
	
	/* Set frame format: 8 bit data, 2 stop bit */
	UCSR0C |= (1 << USBS0) | (3 << UCSZ00);
 a44:	e2 ec       	ldi	r30, 0xC2	; 194
 a46:	f0 e0       	ldi	r31, 0x00	; 0
 a48:	80 81       	ld	r24, Z
 a4a:	8e 60       	ori	r24, 0x0E	; 14
 a4c:	80 83       	st	Z, r24
 a4e:	08 95       	ret

Disassembly of section .text.USART_Transmit:

00000a6c <USART_Transmit>:

static void
USART_Transmit(unsigned char data, FILE *stream)
{
	/* Wait until the transmit buffer is empty*/
	while(!(UCSR0A & (1 << UDRE0)))
 a6c:	90 91 c0 00 	lds	r25, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
 a70:	95 ff       	sbrs	r25, 5
 a72:	fc cf       	rjmp	.-8      	; 0xa6c <USART_Transmit>
	{
		;
	}
	
	/* Put the data into a buffer, then send/transmit the data */
	UDR0 = data;
 a74:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
 a78:	08 95       	ret

Disassembly of section .text.USART_Receive:

00000a7a <USART_Receive>:

static char
USART_Receive(FILE *stream)
{
	/* Wait until the transmit buffer is empty*/
	while(!(UCSR0A & (1 << UDRE0)))
 a7a:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
 a7e:	85 ff       	sbrs	r24, 5
 a80:	fc cf       	rjmp	.-8      	; 0xa7a <USART_Receive>
	{
		;
	}
	
	/* Get the received data from the buffer */
	return UDR0;
 a82:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
}
 a86:	08 95       	ret

Disassembly of section .text.__vector_11:

00000a50 <__vector_11>:
FILE uart_output = FDEV_SETUP_STREAM(USART_Transmit, NULL, _FDEV_SETUP_WRITE);
FILE uart_input = FDEV_SETUP_STREAM(NULL, USART_Receive, _FDEV_SETUP_READ);

ISR
(TIMER1_COMPA_vect)
{
 a50:	1f 92       	push	r1
 a52:	0f 92       	push	r0
 a54:	0f b6       	in	r0, 0x3f	; 63
 a56:	0f 92       	push	r0
 a58:	11 24       	eor	r1, r1
	TCNT1 = 0; // reset timer counter
 a5a:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7f8085>
 a5e:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7f8084>
}
 a62:	0f 90       	pop	r0
 a64:	0f be       	out	0x3f, r0	; 63
 a66:	0f 90       	pop	r0
 a68:	1f 90       	pop	r1
 a6a:	18 95       	reti

Disassembly of section .text.main:

0000060a <main>:


int 
main(void)
{
	USART_init(MYUBRR);
 60a:	87 e6       	ldi	r24, 0x67	; 103
 60c:	90 e0       	ldi	r25, 0x00	; 0
 60e:	0e 94 19 05 	call	0xa32	; 0xa32 <USART_init>
    stdout = &uart_output;
 612:	e0 e0       	ldi	r30, 0x00	; 0
 614:	f1 e0       	ldi	r31, 0x01	; 1
 616:	85 e1       	ldi	r24, 0x15	; 21
 618:	91 e0       	ldi	r25, 0x01	; 1
 61a:	93 83       	std	Z+3, r25	; 0x03
 61c:	82 83       	std	Z+2, r24	; 0x02
    stdin = &uart_input;	
 61e:	86 e0       	ldi	r24, 0x06	; 6
 620:	91 e0       	ldi	r25, 0x01	; 1
 622:	91 83       	std	Z+1, r25	; 0x01
 624:	80 83       	st	Z, r24
    /* set up the ports and pins */
    DDRB |= (1 << PB1); // OC1A is located in digital pin 9
 626:	84 b1       	in	r24, 0x04	; 4
 628:	82 60       	ori	r24, 0x02	; 2
 62a:	84 b9       	out	0x04, r24	; 4
    
    // Enable interrupts
    sei();
 62c:	78 94       	sei
    
    /* set up the 16-bit timer/counter1, mode 9 used */
    TCCR1B  = 0; // reset timer/counter 1
 62e:	a1 e8       	ldi	r26, 0x81	; 129
 630:	b0 e0       	ldi	r27, 0x00	; 0
 632:	1c 92       	st	X, r1
    TCNT1   = 0;
 634:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7f8085>
 638:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7f8084>
    TCCR1A |= (1 << 6); // set compare output mode to toggle
 63c:	e0 e8       	ldi	r30, 0x80	; 128
 63e:	f0 e0       	ldi	r31, 0x00	; 0
 640:	80 81       	ld	r24, Z
 642:	80 64       	ori	r24, 0x40	; 64
 644:	80 83       	st	Z, r24
    
    // mode 9 phase correct
    TCCR1A |= (1 << 0); // set register A WGM[1:0] bits
 646:	80 81       	ld	r24, Z
 648:	81 60       	ori	r24, 0x01	; 1
 64a:	80 83       	st	Z, r24
    // TCCR1A |= 0b00000001;
    TCCR1B |= (1 << 4); // set register B WBM[3:2] bits
 64c:	8c 91       	ld	r24, X
 64e:	80 61       	ori	r24, 0x10	; 16
 650:	8c 93       	st	X, r24
    // TCCR1B |= 0b00010000;
    TIMSK1 |= (1 << 1); // enable compare match A interrupt
 652:	ef e6       	ldi	r30, 0x6F	; 111
 654:	f0 e0       	ldi	r31, 0x00	; 0
 656:	80 81       	ld	r24, Z
 658:	82 60       	ori	r24, 0x02	; 2
 65a:	80 83       	st	Z, r24
    // TIMSK1 |= 0b00000100;
    
    OCR1A = 15297; // C5 523 Hz, no prescaler	
 65c:	81 ec       	ldi	r24, 0xC1	; 193
 65e:	9b e3       	ldi	r25, 0x3B	; 59
 660:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7f8089>
 664:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7f8088>
	
	/* set MISO as output, pin 12 (PB4)*/
	DDRB  = (1 << PB4);
 668:	80 e1       	ldi	r24, 0x10	; 16
 66a:	84 b9       	out	0x04, r24	; 4
	/* set SPI enable */
	SPCR  = (1 << 6);
 66c:	80 e4       	ldi	r24, 0x40	; 64
 66e:	8c bd       	out	0x2c, r24	; 44
	
	// Pin for the red LED, arduino pin 7
	DDRD |= (1 << PD7);
 670:	8a b1       	in	r24, 0x0a	; 10
 672:	80 68       	ori	r24, 0x80	; 128
 674:	8a b9       	out	0x0a, r24	; 10
	
	// Pin for the green LED, arduino pin 6
	DDRD |= (1 << PD6);
 676:	8a b1       	in	r24, 0x0a	; 10
 678:	80 64       	ori	r24, 0x40	; 64
 67a:	8a b9       	out	0x0a, r24	; 10
	
	// Pin for the yellow LED, arduino pin 5
	DDRD |= (1 << PD5);
 67c:	8a b1       	in	r24, 0x0a	; 10
 67e:	80 62       	ori	r24, 0x20	; 32
 680:	8a b9       	out	0x0a, r24	; 10
	
	//Pin for the active buzzer, arduino pin 4
	DDRD |= (1 << PD4);
 682:	8a b1       	in	r24, 0x0a	; 10
 684:	80 61       	ori	r24, 0x10	; 16
 686:	8a b9       	out	0x0a, r24	; 10
	unsigned int spi_receive_data = 0;
	
    while(1)
    {
		
		spi_receive_data = SPDR;
 688:	8e b5       	in	r24, 0x2e	; 46
		g_STATE = spi_receive_data;
 68a:	80 93 24 01 	sts	0x0124, r24	; 0x800124 <g_STATE>

		switch (g_STATE)
 68e:	80 91 24 01 	lds	r24, 0x0124	; 0x800124 <g_STATE>
 692:	82 30       	cpi	r24, 0x02	; 2
 694:	a9 f1       	breq	.+106    	; 0x700 <main+0xf6>
 696:	2c f4       	brge	.+10     	; 0x6a2 <main+0x98>
 698:	88 23       	and	r24, r24
 69a:	61 f0       	breq	.+24     	; 0x6b4 <main+0xaa>
 69c:	81 30       	cpi	r24, 0x01	; 1
 69e:	f1 f0       	breq	.+60     	; 0x6dc <main+0xd2>
 6a0:	bb c0       	rjmp	.+374    	; 0x818 <__DATA_REGION_LENGTH__+0x18>
 6a2:	84 30       	cpi	r24, 0x04	; 4
 6a4:	09 f4       	brne	.+2      	; 0x6a8 <main+0x9e>
 6a6:	7b c0       	rjmp	.+246    	; 0x79e <main+0x194>
 6a8:	0c f4       	brge	.+2      	; 0x6ac <main+0xa2>
 6aa:	41 c0       	rjmp	.+130    	; 0x72e <main+0x124>
 6ac:	85 30       	cpi	r24, 0x05	; 5
 6ae:	09 f4       	brne	.+2      	; 0x6b2 <main+0xa8>
 6b0:	9f c0       	rjmp	.+318    	; 0x7f0 <main+0x1e6>
 6b2:	b2 c0       	rjmp	.+356    	; 0x818 <__DATA_REGION_LENGTH__+0x18>
		{
			case LISTENING:
				PORTD &=  ~(1 << PD6);
 6b4:	8b b1       	in	r24, 0x0b	; 11
 6b6:	8f 7b       	andi	r24, 0xBF	; 191
 6b8:	8b b9       	out	0x0b, r24	; 11
				
				TCCR1B &= ~(1 << 0);
 6ba:	e1 e8       	ldi	r30, 0x81	; 129
 6bc:	f0 e0       	ldi	r31, 0x00	; 0
 6be:	80 81       	ld	r24, Z
 6c0:	8e 7f       	andi	r24, 0xFE	; 254
 6c2:	80 83       	st	Z, r24
				printf("System is active..\n\r");
 6c4:	8e ec       	ldi	r24, 0xCE	; 206
 6c6:	90 e0       	ldi	r25, 0x00	; 0
 6c8:	a0 e0       	ldi	r26, 0x00	; 0
 6ca:	af 93       	push	r26
 6cc:	9f 93       	push	r25
 6ce:	8f 93       	push	r24
 6d0:	0e 94 02 05 	call	0xa04	; 0xa04 <printf>
				
			break;
 6d4:	0f 90       	pop	r0
 6d6:	0f 90       	pop	r0
 6d8:	0f 90       	pop	r0
 6da:	9e c0       	rjmp	.+316    	; 0x818 <__DATA_REGION_LENGTH__+0x18>
			
			case ALARM:
				//Turn off green led
				PORTD &=  ~(1 << PD6);
 6dc:	8b b1       	in	r24, 0x0b	; 11
 6de:	8f 7b       	andi	r24, 0xBF	; 191
 6e0:	8b b9       	out	0x0b, r24	; 11
				
				//Turn on yellow led
				PORTD |=  (1 << PD5);
 6e2:	8b b1       	in	r24, 0x0b	; 11
 6e4:	80 62       	ori	r24, 0x20	; 32
 6e6:	8b b9       	out	0x0b, r24	; 11

				printf("Motion detected. Input password...\n\r");
 6e8:	83 ee       	ldi	r24, 0xE3	; 227
 6ea:	90 e0       	ldi	r25, 0x00	; 0
 6ec:	a0 e0       	ldi	r26, 0x00	; 0
 6ee:	af 93       	push	r26
 6f0:	9f 93       	push	r25
 6f2:	8f 93       	push	r24
 6f4:	0e 94 02 05 	call	0xa04	; 0xa04 <printf>
			break;
 6f8:	0f 90       	pop	r0
 6fa:	0f 90       	pop	r0
 6fc:	0f 90       	pop	r0
 6fe:	8c c0       	rjmp	.+280    	; 0x818 <__DATA_REGION_LENGTH__+0x18>
			
			case UNARMED:
				//Turn on green led
				PORTD |=  (1 << PD6);
 700:	8b b1       	in	r24, 0x0b	; 11
 702:	80 64       	ori	r24, 0x40	; 64
 704:	8b b9       	out	0x0b, r24	; 11
				
				// Turn off yellow led
				PORTD &=  ~(1 << PD5);
 706:	8b b1       	in	r24, 0x0b	; 11
 708:	8f 7d       	andi	r24, 0xDF	; 223
 70a:	8b b9       	out	0x0b, r24	; 11
				
				TCCR1B &= ~(1 << 0);
 70c:	e1 e8       	ldi	r30, 0x81	; 129
 70e:	f0 e0       	ldi	r31, 0x00	; 0
 710:	80 81       	ld	r24, Z
 712:	8e 7f       	andi	r24, 0xFE	; 254
 714:	80 83       	st	Z, r24
				printf("System is unarmed. Press reset button to rearm the system. \n\r");
 716:	88 e0       	ldi	r24, 0x08	; 8
 718:	91 e0       	ldi	r25, 0x01	; 1
 71a:	a0 e0       	ldi	r26, 0x00	; 0
 71c:	af 93       	push	r26
 71e:	9f 93       	push	r25
 720:	8f 93       	push	r24
 722:	0e 94 02 05 	call	0xa04	; 0xa04 <printf>
				
			break;
 726:	0f 90       	pop	r0
 728:	0f 90       	pop	r0
 72a:	0f 90       	pop	r0
 72c:	75 c0       	rjmp	.+234    	; 0x818 <__DATA_REGION_LENGTH__+0x18>
			
			case RESET:
				printf("The system is resetting\n\r");
 72e:	86 e4       	ldi	r24, 0x46	; 70
 730:	91 e0       	ldi	r25, 0x01	; 1
 732:	a0 e0       	ldi	r26, 0x00	; 0
 734:	af 93       	push	r26
 736:	9f 93       	push	r25
 738:	8f 93       	push	r24
 73a:	0e 94 02 05 	call	0xa04	; 0xa04 <printf>
				printf("Motion detection active in:\n\r");
 73e:	80 e6       	ldi	r24, 0x60	; 96
 740:	91 e0       	ldi	r25, 0x01	; 1
 742:	a0 e0       	ldi	r26, 0x00	; 0
 744:	af 93       	push	r26
 746:	9f 93       	push	r25
 748:	8f 93       	push	r24
 74a:	0e 94 02 05 	call	0xa04	; 0xa04 <printf>
				g_STATE = 0;
 74e:	10 92 24 01 	sts	0x0124, r1	; 0x800124 <g_STATE>
				for (int i = 6; i >= 1; --i)
 752:	0f 90       	pop	r0
 754:	0f 90       	pop	r0
 756:	0f 90       	pop	r0
 758:	0f 90       	pop	r0
 75a:	0f 90       	pop	r0
 75c:	0f 90       	pop	r0
 75e:	c6 e0       	ldi	r28, 0x06	; 6
 760:	d0 e0       	ldi	r29, 0x00	; 0
 762:	19 c0       	rjmp	.+50     	; 0x796 <main+0x18c>
				{
					printf("%d\n\r",i);
 764:	df 93       	push	r29
 766:	cf 93       	push	r28
 768:	8e e7       	ldi	r24, 0x7E	; 126
 76a:	91 e0       	ldi	r25, 0x01	; 1
 76c:	a0 e0       	ldi	r26, 0x00	; 0
 76e:	af 93       	push	r26
 770:	9f 93       	push	r25
 772:	8f 93       	push	r24
 774:	0e 94 02 05 	call	0xa04	; 0xa04 <printf>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 778:	9f ef       	ldi	r25, 0xFF	; 255
 77a:	23 ed       	ldi	r18, 0xD3	; 211
 77c:	80 e3       	ldi	r24, 0x30	; 48
 77e:	91 50       	subi	r25, 0x01	; 1
 780:	20 40       	sbci	r18, 0x00	; 0
 782:	80 40       	sbci	r24, 0x00	; 0
 784:	e1 f7       	brne	.-8      	; 0x77e <main+0x174>
 786:	00 c0       	rjmp	.+0      	; 0x788 <main+0x17e>
 788:	00 00       	nop
			
			case RESET:
				printf("The system is resetting\n\r");
				printf("Motion detection active in:\n\r");
				g_STATE = 0;
				for (int i = 6; i >= 1; --i)
 78a:	21 97       	sbiw	r28, 0x01	; 1
 78c:	0f 90       	pop	r0
 78e:	0f 90       	pop	r0
 790:	0f 90       	pop	r0
 792:	0f 90       	pop	r0
 794:	0f 90       	pop	r0
 796:	1c 16       	cp	r1, r28
 798:	1d 06       	cpc	r1, r29
 79a:	24 f3       	brlt	.-56     	; 0x764 <main+0x15a>
 79c:	3d c0       	rjmp	.+122    	; 0x818 <__DATA_REGION_LENGTH__+0x18>
					_delay_ms(1000);
				}
			break; 
			
			case TIMEOUT:
				PORTD |=  (1 << PD7);
 79e:	8b b1       	in	r24, 0x0b	; 11
 7a0:	80 68       	ori	r24, 0x80	; 128
 7a2:	8b b9       	out	0x0b, r24	; 11
				PORTD |=  (1 << PD4);
 7a4:	8b b1       	in	r24, 0x0b	; 11
 7a6:	80 61       	ori	r24, 0x10	; 16
 7a8:	8b b9       	out	0x0b, r24	; 11
				TCCR1B |= (1 << 0);
 7aa:	c1 e8       	ldi	r28, 0x81	; 129
 7ac:	d0 e0       	ldi	r29, 0x00	; 0
 7ae:	88 81       	ld	r24, Y
 7b0:	81 60       	ori	r24, 0x01	; 1
 7b2:	88 83       	st	Y, r24
				printf("TIMEOUT! ALARM! TIMEOUT! \n\r");
 7b4:	83 e8       	ldi	r24, 0x83	; 131
 7b6:	91 e0       	ldi	r25, 0x01	; 1
 7b8:	a0 e0       	ldi	r26, 0x00	; 0
 7ba:	af 93       	push	r26
 7bc:	9f 93       	push	r25
 7be:	8f 93       	push	r24
 7c0:	0e 94 02 05 	call	0xa04	; 0xa04 <printf>
 7c4:	9f ef       	ldi	r25, 0xFF	; 255
 7c6:	29 e6       	ldi	r18, 0x69	; 105
 7c8:	88 e1       	ldi	r24, 0x18	; 24
 7ca:	91 50       	subi	r25, 0x01	; 1
 7cc:	20 40       	sbci	r18, 0x00	; 0
 7ce:	80 40       	sbci	r24, 0x00	; 0
 7d0:	e1 f7       	brne	.-8      	; 0x7ca <main+0x1c0>
 7d2:	00 c0       	rjmp	.+0      	; 0x7d4 <main+0x1ca>
 7d4:	00 00       	nop
				_delay_ms(500);
				PORTD &=  ~(1 << PD7);
 7d6:	8b b1       	in	r24, 0x0b	; 11
 7d8:	8f 77       	andi	r24, 0x7F	; 127
 7da:	8b b9       	out	0x0b, r24	; 11
				TCCR1B &= ~(1 << 0);
 7dc:	88 81       	ld	r24, Y
 7de:	8e 7f       	andi	r24, 0xFE	; 254
 7e0:	88 83       	st	Y, r24
				PORTD &=  ~(1 << PD4);
 7e2:	8b b1       	in	r24, 0x0b	; 11
 7e4:	8f 7e       	andi	r24, 0xEF	; 239
 7e6:	8b b9       	out	0x0b, r24	; 11
			break;
 7e8:	0f 90       	pop	r0
 7ea:	0f 90       	pop	r0
 7ec:	0f 90       	pop	r0
 7ee:	14 c0       	rjmp	.+40     	; 0x818 <__DATA_REGION_LENGTH__+0x18>
			
			case INCORRECTPSWRD:
				printf("Incorrect password. Try again. \n\r");
 7f0:	8f e9       	ldi	r24, 0x9F	; 159
 7f2:	91 e0       	ldi	r25, 0x01	; 1
 7f4:	a0 e0       	ldi	r26, 0x00	; 0
 7f6:	af 93       	push	r26
 7f8:	9f 93       	push	r25
 7fa:	8f 93       	push	r24
 7fc:	0e 94 02 05 	call	0xa04	; 0xa04 <printf>
 800:	9f ef       	ldi	r25, 0xFF	; 255
 802:	23 ed       	ldi	r18, 0xD3	; 211
 804:	80 e3       	ldi	r24, 0x30	; 48
 806:	91 50       	subi	r25, 0x01	; 1
 808:	20 40       	sbci	r18, 0x00	; 0
 80a:	80 40       	sbci	r24, 0x00	; 0
 80c:	e1 f7       	brne	.-8      	; 0x806 <__DATA_REGION_LENGTH__+0x6>
 80e:	00 c0       	rjmp	.+0      	; 0x810 <__DATA_REGION_LENGTH__+0x10>
 810:	00 00       	nop
 812:	0f 90       	pop	r0
 814:	0f 90       	pop	r0
 816:	0f 90       	pop	r0
 818:	9f ef       	ldi	r25, 0xFF	; 255
 81a:	29 e6       	ldi	r18, 0x69	; 105
 81c:	88 e1       	ldi	r24, 0x18	; 24
 81e:	91 50       	subi	r25, 0x01	; 1
 820:	20 40       	sbci	r18, 0x00	; 0
 822:	80 40       	sbci	r24, 0x00	; 0
 824:	e1 f7       	brne	.-8      	; 0x81e <__DATA_REGION_LENGTH__+0x1e>
 826:	00 c0       	rjmp	.+0      	; 0x828 <__DATA_REGION_LENGTH__+0x28>
 828:	00 00       	nop
 82a:	2e cf       	rjmp	.-420    	; 0x688 <main+0x7e>

Disassembly of section .text.avrlibc:

00000a04 <printf>:
 a04:	a0 e0       	ldi	r26, 0x00	; 0
 a06:	b0 e0       	ldi	r27, 0x00	; 0
 a08:	e8 e0       	ldi	r30, 0x08	; 8
 a0a:	f5 e0       	ldi	r31, 0x05	; 5
 a0c:	0c 94 c0 04 	jmp	0x980	; 0x980 <__prologue_saves__+0x20>
 a10:	9e 01       	movw	r18, r28
 a12:	2b 5f       	subi	r18, 0xFB	; 251
 a14:	3f 4f       	sbci	r19, 0xFF	; 255
 a16:	f9 01       	movw	r30, r18
 a18:	41 91       	ld	r20, Z+
 a1a:	51 91       	ld	r21, Z+
 a1c:	61 91       	ld	r22, Z+
 a1e:	9f 01       	movw	r18, r30
 a20:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <_edata+0x2>
 a24:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <_edata+0x3>
 a28:	0e 94 e1 00 	call	0x1c2	; 0x1c2 <vfprintf>
 a2c:	e2 e0       	ldi	r30, 0x02	; 2
 a2e:	0c 94 f7 04 	jmp	0x9ee	; 0x9ee <__epilogue_restores__+0x20>

Disassembly of section .text.avrlibc:

000001c2 <vfprintf>:
 1c2:	2f 92       	push	r2
 1c4:	3f 92       	push	r3
 1c6:	4f 92       	push	r4
 1c8:	6f 92       	push	r6
 1ca:	7f 92       	push	r7
 1cc:	8f 92       	push	r8
 1ce:	9f 92       	push	r9
 1d0:	af 92       	push	r10
 1d2:	bf 92       	push	r11
 1d4:	cf 92       	push	r12
 1d6:	df 92       	push	r13
 1d8:	ef 92       	push	r14
 1da:	ff 92       	push	r15
 1dc:	0f 93       	push	r16
 1de:	1f 93       	push	r17
 1e0:	cf 93       	push	r28
 1e2:	df 93       	push	r29
 1e4:	cd b7       	in	r28, 0x3d	; 61
 1e6:	de b7       	in	r29, 0x3e	; 62
 1e8:	62 97       	sbiw	r28, 0x12	; 18
 1ea:	0f b6       	in	r0, 0x3f	; 63
 1ec:	f8 94       	cli
 1ee:	de bf       	out	0x3e, r29	; 62
 1f0:	0f be       	out	0x3f, r0	; 63
 1f2:	cd bf       	out	0x3d, r28	; 61
 1f4:	6c 01       	movw	r12, r24
 1f6:	3a 01       	movw	r6, r20
 1f8:	86 2e       	mov	r8, r22
 1fa:	79 01       	movw	r14, r18
 1fc:	fc 01       	movw	r30, r24
 1fe:	10 86       	std	Z+8, r1	; 0x08
 200:	17 82       	std	Z+7, r1	; 0x07
 202:	84 81       	ldd	r24, Z+4	; 0x04
 204:	81 ff       	sbrs	r24, 1
 206:	e7 c1       	rjmp	.+974    	; 0x5d6 <__EEPROM_REGION_LENGTH__+0x1d6>
 208:	9e 01       	movw	r18, r28
 20a:	2f 5f       	subi	r18, 0xFF	; 255
 20c:	3f 4f       	sbci	r19, 0xFF	; 255
 20e:	3d 87       	std	Y+13, r19	; 0x0d
 210:	2c 87       	std	Y+12, r18	; 0x0c
 212:	c9 01       	movw	r24, r18
 214:	a0 e8       	ldi	r26, 0x80	; 128
 216:	88 8b       	std	Y+16, r24	; 0x10
 218:	99 8b       	std	Y+17, r25	; 0x11
 21a:	aa 8b       	std	Y+18, r26	; 0x12
 21c:	9f e3       	ldi	r25, 0x3F	; 63
 21e:	99 2e       	mov	r9, r25
 220:	f3 01       	movw	r30, r6
 222:	84 91       	lpm	r24, Z
 224:	87 fc       	sbrc	r8, 7
 226:	80 81       	ld	r24, Z
 228:	88 23       	and	r24, r24
 22a:	09 f4       	brne	.+2      	; 0x22e <vfprintf+0x6c>
 22c:	d0 c1       	rjmp	.+928    	; 0x5ce <__EEPROM_REGION_LENGTH__+0x1ce>
 22e:	48 2d       	mov	r20, r8
 230:	93 01       	movw	r18, r6
 232:	2f 5f       	subi	r18, 0xFF	; 255
 234:	3f 4f       	sbci	r19, 0xFF	; 255
 236:	4f 4f       	sbci	r20, 0xFF	; 255
 238:	85 32       	cpi	r24, 0x25	; 37
 23a:	19 f0       	breq	.+6      	; 0x242 <vfprintf+0x80>
 23c:	39 01       	movw	r6, r18
 23e:	84 2e       	mov	r8, r20
 240:	0a c0       	rjmp	.+20     	; 0x256 <vfprintf+0x94>
 242:	f9 01       	movw	r30, r18
 244:	84 91       	lpm	r24, Z
 246:	47 fd       	sbrc	r20, 7
 248:	80 81       	ld	r24, Z
 24a:	92 e0       	ldi	r25, 0x02	; 2
 24c:	69 0e       	add	r6, r25
 24e:	71 1c       	adc	r7, r1
 250:	81 1c       	adc	r8, r1
 252:	85 32       	cpi	r24, 0x25	; 37
 254:	29 f4       	brne	.+10     	; 0x260 <vfprintf+0x9e>
 256:	b6 01       	movw	r22, r12
 258:	90 e0       	ldi	r25, 0x00	; 0
 25a:	0e 94 74 04 	call	0x8e8	; 0x8e8 <fputc>
 25e:	e0 cf       	rjmp	.-64     	; 0x220 <vfprintf+0x5e>
 260:	b1 2c       	mov	r11, r1
 262:	00 e0       	ldi	r16, 0x00	; 0
 264:	10 e0       	ldi	r17, 0x00	; 0
 266:	10 32       	cpi	r17, 0x20	; 32
 268:	a0 f4       	brcc	.+40     	; 0x292 <vfprintf+0xd0>
 26a:	8b 32       	cpi	r24, 0x2B	; 43
 26c:	69 f0       	breq	.+26     	; 0x288 <vfprintf+0xc6>
 26e:	30 f4       	brcc	.+12     	; 0x27c <vfprintf+0xba>
 270:	80 32       	cpi	r24, 0x20	; 32
 272:	59 f0       	breq	.+22     	; 0x28a <vfprintf+0xc8>
 274:	83 32       	cpi	r24, 0x23	; 35
 276:	69 f4       	brne	.+26     	; 0x292 <vfprintf+0xd0>
 278:	10 61       	ori	r17, 0x10	; 16
 27a:	2c c0       	rjmp	.+88     	; 0x2d4 <vfprintf+0x112>
 27c:	8d 32       	cpi	r24, 0x2D	; 45
 27e:	39 f0       	breq	.+14     	; 0x28e <vfprintf+0xcc>
 280:	80 33       	cpi	r24, 0x30	; 48
 282:	39 f4       	brne	.+14     	; 0x292 <vfprintf+0xd0>
 284:	11 60       	ori	r17, 0x01	; 1
 286:	26 c0       	rjmp	.+76     	; 0x2d4 <vfprintf+0x112>
 288:	12 60       	ori	r17, 0x02	; 2
 28a:	14 60       	ori	r17, 0x04	; 4
 28c:	23 c0       	rjmp	.+70     	; 0x2d4 <vfprintf+0x112>
 28e:	18 60       	ori	r17, 0x08	; 8
 290:	21 c0       	rjmp	.+66     	; 0x2d4 <vfprintf+0x112>
 292:	17 fd       	sbrc	r17, 7
 294:	29 c0       	rjmp	.+82     	; 0x2e8 <vfprintf+0x126>
 296:	90 ed       	ldi	r25, 0xD0	; 208
 298:	98 0f       	add	r25, r24
 29a:	9a 30       	cpi	r25, 0x0A	; 10
 29c:	78 f4       	brcc	.+30     	; 0x2bc <vfprintf+0xfa>
 29e:	16 ff       	sbrs	r17, 6
 2a0:	06 c0       	rjmp	.+12     	; 0x2ae <vfprintf+0xec>
 2a2:	aa e0       	ldi	r26, 0x0A	; 10
 2a4:	ba 9e       	mul	r11, r26
 2a6:	90 0d       	add	r25, r0
 2a8:	11 24       	eor	r1, r1
 2aa:	b9 2e       	mov	r11, r25
 2ac:	13 c0       	rjmp	.+38     	; 0x2d4 <vfprintf+0x112>
 2ae:	ea e0       	ldi	r30, 0x0A	; 10
 2b0:	0e 9f       	mul	r16, r30
 2b2:	90 0d       	add	r25, r0
 2b4:	11 24       	eor	r1, r1
 2b6:	09 2f       	mov	r16, r25
 2b8:	10 62       	ori	r17, 0x20	; 32
 2ba:	0c c0       	rjmp	.+24     	; 0x2d4 <vfprintf+0x112>
 2bc:	8e 32       	cpi	r24, 0x2E	; 46
 2be:	21 f4       	brne	.+8      	; 0x2c8 <vfprintf+0x106>
 2c0:	16 fd       	sbrc	r17, 6
 2c2:	85 c1       	rjmp	.+778    	; 0x5ce <__EEPROM_REGION_LENGTH__+0x1ce>
 2c4:	10 64       	ori	r17, 0x40	; 64
 2c6:	06 c0       	rjmp	.+12     	; 0x2d4 <vfprintf+0x112>
 2c8:	8c 36       	cpi	r24, 0x6C	; 108
 2ca:	11 f4       	brne	.+4      	; 0x2d0 <vfprintf+0x10e>
 2cc:	10 68       	ori	r17, 0x80	; 128
 2ce:	02 c0       	rjmp	.+4      	; 0x2d4 <vfprintf+0x112>
 2d0:	88 36       	cpi	r24, 0x68	; 104
 2d2:	51 f4       	brne	.+20     	; 0x2e8 <vfprintf+0x126>
 2d4:	f3 01       	movw	r30, r6
 2d6:	84 91       	lpm	r24, Z
 2d8:	87 fc       	sbrc	r8, 7
 2da:	80 81       	ld	r24, Z
 2dc:	ff ef       	ldi	r31, 0xFF	; 255
 2de:	6f 1a       	sub	r6, r31
 2e0:	7f 0a       	sbc	r7, r31
 2e2:	8f 0a       	sbc	r8, r31
 2e4:	81 11       	cpse	r24, r1
 2e6:	bf cf       	rjmp	.-130    	; 0x266 <vfprintf+0xa4>
 2e8:	98 2f       	mov	r25, r24
 2ea:	9f 7d       	andi	r25, 0xDF	; 223
 2ec:	95 54       	subi	r25, 0x45	; 69
 2ee:	93 30       	cpi	r25, 0x03	; 3
 2f0:	28 f4       	brcc	.+10     	; 0x2fc <vfprintf+0x13a>
 2f2:	24 e0       	ldi	r18, 0x04	; 4
 2f4:	e2 0e       	add	r14, r18
 2f6:	f1 1c       	adc	r15, r1
 2f8:	99 82       	std	Y+1, r9	; 0x01
 2fa:	0f c0       	rjmp	.+30     	; 0x31a <vfprintf+0x158>
 2fc:	83 36       	cpi	r24, 0x63	; 99
 2fe:	31 f0       	breq	.+12     	; 0x30c <vfprintf+0x14a>
 300:	83 37       	cpi	r24, 0x73	; 115
 302:	91 f0       	breq	.+36     	; 0x328 <vfprintf+0x166>
 304:	83 35       	cpi	r24, 0x53	; 83
 306:	09 f0       	breq	.+2      	; 0x30a <vfprintf+0x148>
 308:	63 c0       	rjmp	.+198    	; 0x3d0 <vfprintf+0x20e>
 30a:	27 c0       	rjmp	.+78     	; 0x35a <vfprintf+0x198>
 30c:	f7 01       	movw	r30, r14
 30e:	80 81       	ld	r24, Z
 310:	89 83       	std	Y+1, r24	; 0x01
 312:	97 01       	movw	r18, r14
 314:	2e 5f       	subi	r18, 0xFE	; 254
 316:	3f 4f       	sbci	r19, 0xFF	; 255
 318:	79 01       	movw	r14, r18
 31a:	28 88       	ldd	r2, Y+16	; 0x10
 31c:	39 88       	ldd	r3, Y+17	; 0x11
 31e:	4a 88       	ldd	r4, Y+18	; 0x12
 320:	aa 24       	eor	r10, r10
 322:	a3 94       	inc	r10
 324:	b1 2c       	mov	r11, r1
 326:	17 c0       	rjmp	.+46     	; 0x356 <vfprintf+0x194>
 328:	a7 01       	movw	r20, r14
 32a:	4d 5f       	subi	r20, 0xFD	; 253
 32c:	5f 4f       	sbci	r21, 0xFF	; 255
 32e:	5f 87       	std	Y+15, r21	; 0x0f
 330:	4e 87       	std	Y+14, r20	; 0x0e
 332:	f7 01       	movw	r30, r14
 334:	20 80       	ld	r2, Z
 336:	31 80       	ldd	r3, Z+1	; 0x01
 338:	42 80       	ldd	r4, Z+2	; 0x02
 33a:	16 ff       	sbrs	r17, 6
 33c:	03 c0       	rjmp	.+6      	; 0x344 <vfprintf+0x182>
 33e:	4b 2d       	mov	r20, r11
 340:	50 e0       	ldi	r21, 0x00	; 0
 342:	02 c0       	rjmp	.+4      	; 0x348 <vfprintf+0x186>
 344:	4f ef       	ldi	r20, 0xFF	; 255
 346:	5f ef       	ldi	r21, 0xFF	; 255
 348:	84 2d       	mov	r24, r4
 34a:	b1 01       	movw	r22, r2
 34c:	0e 94 cc 04 	call	0x998	; 0x998 <strnlen>
 350:	5c 01       	movw	r10, r24
 352:	ee 84       	ldd	r14, Y+14	; 0x0e
 354:	ff 84       	ldd	r15, Y+15	; 0x0f
 356:	1f 77       	andi	r17, 0x7F	; 127
 358:	18 c0       	rjmp	.+48     	; 0x38a <vfprintf+0x1c8>
 35a:	97 01       	movw	r18, r14
 35c:	2d 5f       	subi	r18, 0xFD	; 253
 35e:	3f 4f       	sbci	r19, 0xFF	; 255
 360:	3f 87       	std	Y+15, r19	; 0x0f
 362:	2e 87       	std	Y+14, r18	; 0x0e
 364:	f7 01       	movw	r30, r14
 366:	20 80       	ld	r2, Z
 368:	31 80       	ldd	r3, Z+1	; 0x01
 36a:	42 80       	ldd	r4, Z+2	; 0x02
 36c:	16 ff       	sbrs	r17, 6
 36e:	03 c0       	rjmp	.+6      	; 0x376 <vfprintf+0x1b4>
 370:	4b 2d       	mov	r20, r11
 372:	50 e0       	ldi	r21, 0x00	; 0
 374:	02 c0       	rjmp	.+4      	; 0x37a <vfprintf+0x1b8>
 376:	4f ef       	ldi	r20, 0xFF	; 255
 378:	5f ef       	ldi	r21, 0xFF	; 255
 37a:	84 2d       	mov	r24, r4
 37c:	b1 01       	movw	r22, r2
 37e:	0e 94 cc 04 	call	0x998	; 0x998 <strnlen>
 382:	5c 01       	movw	r10, r24
 384:	10 68       	ori	r17, 0x80	; 128
 386:	ee 84       	ldd	r14, Y+14	; 0x0e
 388:	ff 84       	ldd	r15, Y+15	; 0x0f
 38a:	13 fd       	sbrc	r17, 3
 38c:	1d c0       	rjmp	.+58     	; 0x3c8 <vfprintf+0x206>
 38e:	80 2f       	mov	r24, r16
 390:	90 e0       	ldi	r25, 0x00	; 0
 392:	a8 16       	cp	r10, r24
 394:	b9 06       	cpc	r11, r25
 396:	c0 f4       	brcc	.+48     	; 0x3c8 <vfprintf+0x206>
 398:	b6 01       	movw	r22, r12
 39a:	80 e2       	ldi	r24, 0x20	; 32
 39c:	90 e0       	ldi	r25, 0x00	; 0
 39e:	0e 94 74 04 	call	0x8e8	; 0x8e8 <fputc>
 3a2:	01 50       	subi	r16, 0x01	; 1
 3a4:	f4 cf       	rjmp	.-24     	; 0x38e <vfprintf+0x1cc>
 3a6:	f1 01       	movw	r30, r2
 3a8:	84 91       	lpm	r24, Z
 3aa:	47 fc       	sbrc	r4, 7
 3ac:	80 81       	ld	r24, Z
 3ae:	ff ef       	ldi	r31, 0xFF	; 255
 3b0:	2f 1a       	sub	r2, r31
 3b2:	3f 0a       	sbc	r3, r31
 3b4:	4f 0a       	sbc	r4, r31
 3b6:	b6 01       	movw	r22, r12
 3b8:	90 e0       	ldi	r25, 0x00	; 0
 3ba:	0e 94 74 04 	call	0x8e8	; 0x8e8 <fputc>
 3be:	01 11       	cpse	r16, r1
 3c0:	01 50       	subi	r16, 0x01	; 1
 3c2:	21 e0       	ldi	r18, 0x01	; 1
 3c4:	a2 1a       	sub	r10, r18
 3c6:	b1 08       	sbc	r11, r1
 3c8:	a1 14       	cp	r10, r1
 3ca:	b1 04       	cpc	r11, r1
 3cc:	61 f7       	brne	.-40     	; 0x3a6 <vfprintf+0x1e4>
 3ce:	f5 c0       	rjmp	.+490    	; 0x5ba <__EEPROM_REGION_LENGTH__+0x1ba>
 3d0:	84 36       	cpi	r24, 0x64	; 100
 3d2:	11 f0       	breq	.+4      	; 0x3d8 <vfprintf+0x216>
 3d4:	89 36       	cpi	r24, 0x69	; 105
 3d6:	71 f5       	brne	.+92     	; 0x434 <__EEPROM_REGION_LENGTH__+0x34>
 3d8:	f7 01       	movw	r30, r14
 3da:	17 ff       	sbrs	r17, 7
 3dc:	08 c0       	rjmp	.+16     	; 0x3ee <vfprintf+0x22c>
 3de:	60 81       	ld	r22, Z
 3e0:	71 81       	ldd	r23, Z+1	; 0x01
 3e2:	82 81       	ldd	r24, Z+2	; 0x02
 3e4:	93 81       	ldd	r25, Z+3	; 0x03
 3e6:	97 01       	movw	r18, r14
 3e8:	2c 5f       	subi	r18, 0xFC	; 252
 3ea:	3f 4f       	sbci	r19, 0xFF	; 255
 3ec:	09 c0       	rjmp	.+18     	; 0x400 <__EEPROM_REGION_LENGTH__>
 3ee:	60 81       	ld	r22, Z
 3f0:	71 81       	ldd	r23, Z+1	; 0x01
 3f2:	07 2e       	mov	r0, r23
 3f4:	00 0c       	add	r0, r0
 3f6:	88 0b       	sbc	r24, r24
 3f8:	99 0b       	sbc	r25, r25
 3fa:	97 01       	movw	r18, r14
 3fc:	2e 5f       	subi	r18, 0xFE	; 254
 3fe:	3f 4f       	sbci	r19, 0xFF	; 255
 400:	79 01       	movw	r14, r18
 402:	1f 76       	andi	r17, 0x6F	; 111
 404:	31 2e       	mov	r3, r17
 406:	97 ff       	sbrs	r25, 7
 408:	0a c0       	rjmp	.+20     	; 0x41e <__EEPROM_REGION_LENGTH__+0x1e>
 40a:	90 95       	com	r25
 40c:	80 95       	com	r24
 40e:	70 95       	com	r23
 410:	61 95       	neg	r22
 412:	7f 4f       	sbci	r23, 0xFF	; 255
 414:	8f 4f       	sbci	r24, 0xFF	; 255
 416:	9f 4f       	sbci	r25, 0xFF	; 255
 418:	31 2f       	mov	r19, r17
 41a:	30 68       	ori	r19, 0x80	; 128
 41c:	33 2e       	mov	r3, r19
 41e:	2a e0       	ldi	r18, 0x0A	; 10
 420:	30 e0       	ldi	r19, 0x00	; 0
 422:	ae 01       	movw	r20, r28
 424:	4f 5f       	subi	r20, 0xFF	; 255
 426:	5f 4f       	sbci	r21, 0xFF	; 255
 428:	0e 94 16 04 	call	0x82c	; 0x82c <__ultoa_invert>
 42c:	48 2e       	mov	r4, r24
 42e:	4c 85       	ldd	r20, Y+12	; 0x0c
 430:	44 1a       	sub	r4, r20
 432:	4a c0       	rjmp	.+148    	; 0x4c8 <__EEPROM_REGION_LENGTH__+0xc8>
 434:	85 37       	cpi	r24, 0x75	; 117
 436:	29 f4       	brne	.+10     	; 0x442 <__EEPROM_REGION_LENGTH__+0x42>
 438:	1f 7e       	andi	r17, 0xEF	; 239
 43a:	a1 2e       	mov	r10, r17
 43c:	2a e0       	ldi	r18, 0x0A	; 10
 43e:	30 e0       	ldi	r19, 0x00	; 0
 440:	25 c0       	rjmp	.+74     	; 0x48c <__EEPROM_REGION_LENGTH__+0x8c>
 442:	51 2f       	mov	r21, r17
 444:	59 7f       	andi	r21, 0xF9	; 249
 446:	a5 2e       	mov	r10, r21
 448:	8f 36       	cpi	r24, 0x6F	; 111
 44a:	c1 f0       	breq	.+48     	; 0x47c <__EEPROM_REGION_LENGTH__+0x7c>
 44c:	18 f4       	brcc	.+6      	; 0x454 <__EEPROM_REGION_LENGTH__+0x54>
 44e:	88 35       	cpi	r24, 0x58	; 88
 450:	79 f0       	breq	.+30     	; 0x470 <__EEPROM_REGION_LENGTH__+0x70>
 452:	bd c0       	rjmp	.+378    	; 0x5ce <__EEPROM_REGION_LENGTH__+0x1ce>
 454:	80 37       	cpi	r24, 0x70	; 112
 456:	19 f0       	breq	.+6      	; 0x45e <__EEPROM_REGION_LENGTH__+0x5e>
 458:	88 37       	cpi	r24, 0x78	; 120
 45a:	21 f0       	breq	.+8      	; 0x464 <__EEPROM_REGION_LENGTH__+0x64>
 45c:	b8 c0       	rjmp	.+368    	; 0x5ce <__EEPROM_REGION_LENGTH__+0x1ce>
 45e:	85 2f       	mov	r24, r21
 460:	80 61       	ori	r24, 0x10	; 16
 462:	a8 2e       	mov	r10, r24
 464:	a4 fe       	sbrs	r10, 4
 466:	0d c0       	rjmp	.+26     	; 0x482 <__EEPROM_REGION_LENGTH__+0x82>
 468:	9a 2d       	mov	r25, r10
 46a:	94 60       	ori	r25, 0x04	; 4
 46c:	a9 2e       	mov	r10, r25
 46e:	09 c0       	rjmp	.+18     	; 0x482 <__EEPROM_REGION_LENGTH__+0x82>
 470:	14 ff       	sbrs	r17, 4
 472:	0a c0       	rjmp	.+20     	; 0x488 <__EEPROM_REGION_LENGTH__+0x88>
 474:	a5 2f       	mov	r26, r21
 476:	a6 60       	ori	r26, 0x06	; 6
 478:	aa 2e       	mov	r10, r26
 47a:	06 c0       	rjmp	.+12     	; 0x488 <__EEPROM_REGION_LENGTH__+0x88>
 47c:	28 e0       	ldi	r18, 0x08	; 8
 47e:	30 e0       	ldi	r19, 0x00	; 0
 480:	05 c0       	rjmp	.+10     	; 0x48c <__EEPROM_REGION_LENGTH__+0x8c>
 482:	20 e1       	ldi	r18, 0x10	; 16
 484:	30 e0       	ldi	r19, 0x00	; 0
 486:	02 c0       	rjmp	.+4      	; 0x48c <__EEPROM_REGION_LENGTH__+0x8c>
 488:	20 e1       	ldi	r18, 0x10	; 16
 48a:	32 e0       	ldi	r19, 0x02	; 2
 48c:	f7 01       	movw	r30, r14
 48e:	a7 fe       	sbrs	r10, 7
 490:	08 c0       	rjmp	.+16     	; 0x4a2 <__EEPROM_REGION_LENGTH__+0xa2>
 492:	60 81       	ld	r22, Z
 494:	71 81       	ldd	r23, Z+1	; 0x01
 496:	82 81       	ldd	r24, Z+2	; 0x02
 498:	93 81       	ldd	r25, Z+3	; 0x03
 49a:	a7 01       	movw	r20, r14
 49c:	4c 5f       	subi	r20, 0xFC	; 252
 49e:	5f 4f       	sbci	r21, 0xFF	; 255
 4a0:	07 c0       	rjmp	.+14     	; 0x4b0 <__EEPROM_REGION_LENGTH__+0xb0>
 4a2:	60 81       	ld	r22, Z
 4a4:	71 81       	ldd	r23, Z+1	; 0x01
 4a6:	80 e0       	ldi	r24, 0x00	; 0
 4a8:	90 e0       	ldi	r25, 0x00	; 0
 4aa:	a7 01       	movw	r20, r14
 4ac:	4e 5f       	subi	r20, 0xFE	; 254
 4ae:	5f 4f       	sbci	r21, 0xFF	; 255
 4b0:	7a 01       	movw	r14, r20
 4b2:	ae 01       	movw	r20, r28
 4b4:	4f 5f       	subi	r20, 0xFF	; 255
 4b6:	5f 4f       	sbci	r21, 0xFF	; 255
 4b8:	0e 94 16 04 	call	0x82c	; 0x82c <__ultoa_invert>
 4bc:	48 2e       	mov	r4, r24
 4be:	5c 85       	ldd	r21, Y+12	; 0x0c
 4c0:	45 1a       	sub	r4, r21
 4c2:	8a 2d       	mov	r24, r10
 4c4:	8f 77       	andi	r24, 0x7F	; 127
 4c6:	38 2e       	mov	r3, r24
 4c8:	36 fe       	sbrs	r3, 6
 4ca:	0d c0       	rjmp	.+26     	; 0x4e6 <__EEPROM_REGION_LENGTH__+0xe6>
 4cc:	93 2d       	mov	r25, r3
 4ce:	9e 7f       	andi	r25, 0xFE	; 254
 4d0:	a9 2e       	mov	r10, r25
 4d2:	4b 14       	cp	r4, r11
 4d4:	58 f4       	brcc	.+22     	; 0x4ec <__EEPROM_REGION_LENGTH__+0xec>
 4d6:	34 fe       	sbrs	r3, 4
 4d8:	0b c0       	rjmp	.+22     	; 0x4f0 <__EEPROM_REGION_LENGTH__+0xf0>
 4da:	32 fc       	sbrc	r3, 2
 4dc:	09 c0       	rjmp	.+18     	; 0x4f0 <__EEPROM_REGION_LENGTH__+0xf0>
 4de:	a3 2d       	mov	r26, r3
 4e0:	ae 7e       	andi	r26, 0xEE	; 238
 4e2:	aa 2e       	mov	r10, r26
 4e4:	05 c0       	rjmp	.+10     	; 0x4f0 <__EEPROM_REGION_LENGTH__+0xf0>
 4e6:	14 2d       	mov	r17, r4
 4e8:	a3 2c       	mov	r10, r3
 4ea:	03 c0       	rjmp	.+6      	; 0x4f2 <__EEPROM_REGION_LENGTH__+0xf2>
 4ec:	14 2d       	mov	r17, r4
 4ee:	01 c0       	rjmp	.+2      	; 0x4f2 <__EEPROM_REGION_LENGTH__+0xf2>
 4f0:	1b 2d       	mov	r17, r11
 4f2:	a4 fe       	sbrs	r10, 4
 4f4:	0e c0       	rjmp	.+28     	; 0x512 <__EEPROM_REGION_LENGTH__+0x112>
 4f6:	fe 01       	movw	r30, r28
 4f8:	e4 0d       	add	r30, r4
 4fa:	f1 1d       	adc	r31, r1
 4fc:	80 81       	ld	r24, Z
 4fe:	80 33       	cpi	r24, 0x30	; 48
 500:	21 f4       	brne	.+8      	; 0x50a <__EEPROM_REGION_LENGTH__+0x10a>
 502:	ea 2d       	mov	r30, r10
 504:	e9 7e       	andi	r30, 0xE9	; 233
 506:	ae 2e       	mov	r10, r30
 508:	08 c0       	rjmp	.+16     	; 0x51a <__EEPROM_REGION_LENGTH__+0x11a>
 50a:	a2 fe       	sbrs	r10, 2
 50c:	05 c0       	rjmp	.+10     	; 0x518 <__EEPROM_REGION_LENGTH__+0x118>
 50e:	1e 5f       	subi	r17, 0xFE	; 254
 510:	04 c0       	rjmp	.+8      	; 0x51a <__EEPROM_REGION_LENGTH__+0x11a>
 512:	8a 2d       	mov	r24, r10
 514:	86 78       	andi	r24, 0x86	; 134
 516:	09 f0       	breq	.+2      	; 0x51a <__EEPROM_REGION_LENGTH__+0x11a>
 518:	1f 5f       	subi	r17, 0xFF	; 255
 51a:	a3 fc       	sbrc	r10, 3
 51c:	11 c0       	rjmp	.+34     	; 0x540 <__EEPROM_REGION_LENGTH__+0x140>
 51e:	a0 fe       	sbrs	r10, 0
 520:	06 c0       	rjmp	.+12     	; 0x52e <__EEPROM_REGION_LENGTH__+0x12e>
 522:	10 17       	cp	r17, r16
 524:	88 f4       	brcc	.+34     	; 0x548 <__EEPROM_REGION_LENGTH__+0x148>
 526:	04 0d       	add	r16, r4
 528:	b0 2e       	mov	r11, r16
 52a:	b1 1a       	sub	r11, r17
 52c:	0e c0       	rjmp	.+28     	; 0x54a <__EEPROM_REGION_LENGTH__+0x14a>
 52e:	10 17       	cp	r17, r16
 530:	60 f4       	brcc	.+24     	; 0x54a <__EEPROM_REGION_LENGTH__+0x14a>
 532:	b6 01       	movw	r22, r12
 534:	80 e2       	ldi	r24, 0x20	; 32
 536:	90 e0       	ldi	r25, 0x00	; 0
 538:	0e 94 74 04 	call	0x8e8	; 0x8e8 <fputc>
 53c:	1f 5f       	subi	r17, 0xFF	; 255
 53e:	f7 cf       	rjmp	.-18     	; 0x52e <__EEPROM_REGION_LENGTH__+0x12e>
 540:	10 17       	cp	r17, r16
 542:	18 f4       	brcc	.+6      	; 0x54a <__EEPROM_REGION_LENGTH__+0x14a>
 544:	01 1b       	sub	r16, r17
 546:	02 c0       	rjmp	.+4      	; 0x54c <__EEPROM_REGION_LENGTH__+0x14c>
 548:	b4 2c       	mov	r11, r4
 54a:	00 e0       	ldi	r16, 0x00	; 0
 54c:	a4 fe       	sbrs	r10, 4
 54e:	10 c0       	rjmp	.+32     	; 0x570 <__EEPROM_REGION_LENGTH__+0x170>
 550:	b6 01       	movw	r22, r12
 552:	80 e3       	ldi	r24, 0x30	; 48
 554:	90 e0       	ldi	r25, 0x00	; 0
 556:	0e 94 74 04 	call	0x8e8	; 0x8e8 <fputc>
 55a:	a2 fe       	sbrs	r10, 2
 55c:	17 c0       	rjmp	.+46     	; 0x58c <__EEPROM_REGION_LENGTH__+0x18c>
 55e:	a1 fc       	sbrc	r10, 1
 560:	03 c0       	rjmp	.+6      	; 0x568 <__EEPROM_REGION_LENGTH__+0x168>
 562:	88 e7       	ldi	r24, 0x78	; 120
 564:	90 e0       	ldi	r25, 0x00	; 0
 566:	02 c0       	rjmp	.+4      	; 0x56c <__EEPROM_REGION_LENGTH__+0x16c>
 568:	88 e5       	ldi	r24, 0x58	; 88
 56a:	90 e0       	ldi	r25, 0x00	; 0
 56c:	b6 01       	movw	r22, r12
 56e:	0c c0       	rjmp	.+24     	; 0x588 <__EEPROM_REGION_LENGTH__+0x188>
 570:	8a 2d       	mov	r24, r10
 572:	86 78       	andi	r24, 0x86	; 134
 574:	59 f0       	breq	.+22     	; 0x58c <__EEPROM_REGION_LENGTH__+0x18c>
 576:	a1 fe       	sbrs	r10, 1
 578:	02 c0       	rjmp	.+4      	; 0x57e <__EEPROM_REGION_LENGTH__+0x17e>
 57a:	8b e2       	ldi	r24, 0x2B	; 43
 57c:	01 c0       	rjmp	.+2      	; 0x580 <__EEPROM_REGION_LENGTH__+0x180>
 57e:	80 e2       	ldi	r24, 0x20	; 32
 580:	a7 fc       	sbrc	r10, 7
 582:	8d e2       	ldi	r24, 0x2D	; 45
 584:	b6 01       	movw	r22, r12
 586:	90 e0       	ldi	r25, 0x00	; 0
 588:	0e 94 74 04 	call	0x8e8	; 0x8e8 <fputc>
 58c:	4b 14       	cp	r4, r11
 58e:	38 f4       	brcc	.+14     	; 0x59e <__EEPROM_REGION_LENGTH__+0x19e>
 590:	b6 01       	movw	r22, r12
 592:	80 e3       	ldi	r24, 0x30	; 48
 594:	90 e0       	ldi	r25, 0x00	; 0
 596:	0e 94 74 04 	call	0x8e8	; 0x8e8 <fputc>
 59a:	ba 94       	dec	r11
 59c:	f7 cf       	rjmp	.-18     	; 0x58c <__EEPROM_REGION_LENGTH__+0x18c>
 59e:	4a 94       	dec	r4
 5a0:	e1 e0       	ldi	r30, 0x01	; 1
 5a2:	f0 e0       	ldi	r31, 0x00	; 0
 5a4:	ec 0f       	add	r30, r28
 5a6:	fd 1f       	adc	r31, r29
 5a8:	e4 0d       	add	r30, r4
 5aa:	f1 1d       	adc	r31, r1
 5ac:	80 81       	ld	r24, Z
 5ae:	b6 01       	movw	r22, r12
 5b0:	90 e0       	ldi	r25, 0x00	; 0
 5b2:	0e 94 74 04 	call	0x8e8	; 0x8e8 <fputc>
 5b6:	41 10       	cpse	r4, r1
 5b8:	f2 cf       	rjmp	.-28     	; 0x59e <__EEPROM_REGION_LENGTH__+0x19e>
 5ba:	00 23       	and	r16, r16
 5bc:	09 f4       	brne	.+2      	; 0x5c0 <__EEPROM_REGION_LENGTH__+0x1c0>
 5be:	30 ce       	rjmp	.-928    	; 0x220 <vfprintf+0x5e>
 5c0:	b6 01       	movw	r22, r12
 5c2:	80 e2       	ldi	r24, 0x20	; 32
 5c4:	90 e0       	ldi	r25, 0x00	; 0
 5c6:	0e 94 74 04 	call	0x8e8	; 0x8e8 <fputc>
 5ca:	01 50       	subi	r16, 0x01	; 1
 5cc:	f6 cf       	rjmp	.-20     	; 0x5ba <__EEPROM_REGION_LENGTH__+0x1ba>
 5ce:	f6 01       	movw	r30, r12
 5d0:	87 81       	ldd	r24, Z+7	; 0x07
 5d2:	90 85       	ldd	r25, Z+8	; 0x08
 5d4:	02 c0       	rjmp	.+4      	; 0x5da <__EEPROM_REGION_LENGTH__+0x1da>
 5d6:	8f ef       	ldi	r24, 0xFF	; 255
 5d8:	9f ef       	ldi	r25, 0xFF	; 255
 5da:	62 96       	adiw	r28, 0x12	; 18
 5dc:	0f b6       	in	r0, 0x3f	; 63
 5de:	f8 94       	cli
 5e0:	de bf       	out	0x3e, r29	; 62
 5e2:	0f be       	out	0x3f, r0	; 63
 5e4:	cd bf       	out	0x3d, r28	; 61
 5e6:	df 91       	pop	r29
 5e8:	cf 91       	pop	r28
 5ea:	1f 91       	pop	r17
 5ec:	0f 91       	pop	r16
 5ee:	ff 90       	pop	r15
 5f0:	ef 90       	pop	r14
 5f2:	df 90       	pop	r13
 5f4:	cf 90       	pop	r12
 5f6:	bf 90       	pop	r11
 5f8:	af 90       	pop	r10
 5fa:	9f 90       	pop	r9
 5fc:	8f 90       	pop	r8
 5fe:	7f 90       	pop	r7
 600:	6f 90       	pop	r6
 602:	4f 90       	pop	r4
 604:	3f 90       	pop	r3
 606:	2f 90       	pop	r2
 608:	08 95       	ret

Disassembly of section .text.avrlibc:

00000998 <strnlen>:
 998:	cf 92       	push	r12
 99a:	df 92       	push	r13
 99c:	ef 92       	push	r14
 99e:	6b 01       	movw	r12, r22
 9a0:	e8 2e       	mov	r14, r24
 9a2:	a8 2f       	mov	r26, r24
 9a4:	cb 01       	movw	r24, r22
 9a6:	41 15       	cp	r20, r1
 9a8:	51 05       	cpc	r21, r1
 9aa:	31 f4       	brne	.+12     	; 0x9b8 <strnlen+0x20>
 9ac:	8c 19       	sub	r24, r12
 9ae:	9d 09       	sbc	r25, r13
 9b0:	ef 90       	pop	r14
 9b2:	df 90       	pop	r13
 9b4:	cf 90       	pop	r12
 9b6:	08 95       	ret
 9b8:	fc 01       	movw	r30, r24
 9ba:	24 91       	lpm	r18, Z
 9bc:	a7 fd       	sbrc	r26, 7
 9be:	20 81       	ld	r18, Z
 9c0:	22 23       	and	r18, r18
 9c2:	a1 f3       	breq	.-24     	; 0x9ac <strnlen+0x14>
 9c4:	01 96       	adiw	r24, 0x01	; 1
 9c6:	a1 1d       	adc	r26, r1
 9c8:	41 50       	subi	r20, 0x01	; 1
 9ca:	51 09       	sbc	r21, r1
 9cc:	ec cf       	rjmp	.-40     	; 0x9a6 <strnlen+0xe>

Disassembly of section .text.avrlibc:

000008e8 <fputc>:
 8e8:	0f 93       	push	r16
 8ea:	1f 93       	push	r17
 8ec:	cf 93       	push	r28
 8ee:	df 93       	push	r29
 8f0:	fb 01       	movw	r30, r22
 8f2:	24 81       	ldd	r18, Z+4	; 0x04
 8f4:	21 fd       	sbrc	r18, 1
 8f6:	03 c0       	rjmp	.+6      	; 0x8fe <fputc+0x16>
 8f8:	8f ef       	ldi	r24, 0xFF	; 255
 8fa:	9f ef       	ldi	r25, 0xFF	; 255
 8fc:	2c c0       	rjmp	.+88     	; 0x956 <__stack+0x57>
 8fe:	22 ff       	sbrs	r18, 2
 900:	16 c0       	rjmp	.+44     	; 0x92e <__stack+0x2f>
 902:	47 81       	ldd	r20, Z+7	; 0x07
 904:	50 85       	ldd	r21, Z+8	; 0x08
 906:	25 81       	ldd	r18, Z+5	; 0x05
 908:	36 81       	ldd	r19, Z+6	; 0x06
 90a:	42 17       	cp	r20, r18
 90c:	53 07       	cpc	r21, r19
 90e:	44 f4       	brge	.+16     	; 0x920 <__stack+0x21>
 910:	a0 81       	ld	r26, Z
 912:	b1 81       	ldd	r27, Z+1	; 0x01
 914:	9d 01       	movw	r18, r26
 916:	2f 5f       	subi	r18, 0xFF	; 255
 918:	3f 4f       	sbci	r19, 0xFF	; 255
 91a:	31 83       	std	Z+1, r19	; 0x01
 91c:	20 83       	st	Z, r18
 91e:	8c 93       	st	X, r24
 920:	27 81       	ldd	r18, Z+7	; 0x07
 922:	30 85       	ldd	r19, Z+8	; 0x08
 924:	2f 5f       	subi	r18, 0xFF	; 255
 926:	3f 4f       	sbci	r19, 0xFF	; 255
 928:	30 87       	std	Z+8, r19	; 0x08
 92a:	27 83       	std	Z+7, r18	; 0x07
 92c:	14 c0       	rjmp	.+40     	; 0x956 <__stack+0x57>
 92e:	8b 01       	movw	r16, r22
 930:	ec 01       	movw	r28, r24
 932:	fb 01       	movw	r30, r22
 934:	01 84       	ldd	r0, Z+9	; 0x09
 936:	f2 85       	ldd	r31, Z+10	; 0x0a
 938:	e0 2d       	mov	r30, r0
 93a:	09 95       	icall
 93c:	89 2b       	or	r24, r25
 93e:	e1 f6       	brne	.-72     	; 0x8f8 <fputc+0x10>
 940:	d8 01       	movw	r26, r16
 942:	17 96       	adiw	r26, 0x07	; 7
 944:	8d 91       	ld	r24, X+
 946:	9c 91       	ld	r25, X
 948:	18 97       	sbiw	r26, 0x08	; 8
 94a:	01 96       	adiw	r24, 0x01	; 1
 94c:	18 96       	adiw	r26, 0x08	; 8
 94e:	9c 93       	st	X, r25
 950:	8e 93       	st	-X, r24
 952:	17 97       	sbiw	r26, 0x07	; 7
 954:	ce 01       	movw	r24, r28
 956:	df 91       	pop	r29
 958:	cf 91       	pop	r28
 95a:	1f 91       	pop	r17
 95c:	0f 91       	pop	r16
 95e:	08 95       	ret

Disassembly of section .text.avrlibc:

0000082c <__ultoa_invert>:
 82c:	fa 01       	movw	r30, r20
 82e:	aa 27       	eor	r26, r26
 830:	28 30       	cpi	r18, 0x08	; 8
 832:	51 f1       	breq	.+84     	; 0x888 <__ultoa_invert+0x5c>
 834:	20 31       	cpi	r18, 0x10	; 16
 836:	81 f1       	breq	.+96     	; 0x898 <__ultoa_invert+0x6c>
 838:	e8 94       	clt
 83a:	6f 93       	push	r22
 83c:	6e 7f       	andi	r22, 0xFE	; 254
 83e:	6e 5f       	subi	r22, 0xFE	; 254
 840:	7f 4f       	sbci	r23, 0xFF	; 255
 842:	8f 4f       	sbci	r24, 0xFF	; 255
 844:	9f 4f       	sbci	r25, 0xFF	; 255
 846:	af 4f       	sbci	r26, 0xFF	; 255
 848:	b1 e0       	ldi	r27, 0x01	; 1
 84a:	3e d0       	rcall	.+124    	; 0x8c8 <__ultoa_invert+0x9c>
 84c:	b4 e0       	ldi	r27, 0x04	; 4
 84e:	3c d0       	rcall	.+120    	; 0x8c8 <__ultoa_invert+0x9c>
 850:	67 0f       	add	r22, r23
 852:	78 1f       	adc	r23, r24
 854:	89 1f       	adc	r24, r25
 856:	9a 1f       	adc	r25, r26
 858:	a1 1d       	adc	r26, r1
 85a:	68 0f       	add	r22, r24
 85c:	79 1f       	adc	r23, r25
 85e:	8a 1f       	adc	r24, r26
 860:	91 1d       	adc	r25, r1
 862:	a1 1d       	adc	r26, r1
 864:	6a 0f       	add	r22, r26
 866:	71 1d       	adc	r23, r1
 868:	81 1d       	adc	r24, r1
 86a:	91 1d       	adc	r25, r1
 86c:	a1 1d       	adc	r26, r1
 86e:	20 d0       	rcall	.+64     	; 0x8b0 <__ultoa_invert+0x84>
 870:	09 f4       	brne	.+2      	; 0x874 <__ultoa_invert+0x48>
 872:	68 94       	set
 874:	3f 91       	pop	r19
 876:	2a e0       	ldi	r18, 0x0A	; 10
 878:	26 9f       	mul	r18, r22
 87a:	11 24       	eor	r1, r1
 87c:	30 19       	sub	r19, r0
 87e:	30 5d       	subi	r19, 0xD0	; 208
 880:	31 93       	st	Z+, r19
 882:	de f6       	brtc	.-74     	; 0x83a <__ultoa_invert+0xe>
 884:	cf 01       	movw	r24, r30
 886:	08 95       	ret
 888:	46 2f       	mov	r20, r22
 88a:	47 70       	andi	r20, 0x07	; 7
 88c:	40 5d       	subi	r20, 0xD0	; 208
 88e:	41 93       	st	Z+, r20
 890:	b3 e0       	ldi	r27, 0x03	; 3
 892:	0f d0       	rcall	.+30     	; 0x8b2 <__ultoa_invert+0x86>
 894:	c9 f7       	brne	.-14     	; 0x888 <__ultoa_invert+0x5c>
 896:	f6 cf       	rjmp	.-20     	; 0x884 <__ultoa_invert+0x58>
 898:	46 2f       	mov	r20, r22
 89a:	4f 70       	andi	r20, 0x0F	; 15
 89c:	40 5d       	subi	r20, 0xD0	; 208
 89e:	4a 33       	cpi	r20, 0x3A	; 58
 8a0:	18 f0       	brcs	.+6      	; 0x8a8 <__ultoa_invert+0x7c>
 8a2:	49 5d       	subi	r20, 0xD9	; 217
 8a4:	31 fd       	sbrc	r19, 1
 8a6:	40 52       	subi	r20, 0x20	; 32
 8a8:	41 93       	st	Z+, r20
 8aa:	02 d0       	rcall	.+4      	; 0x8b0 <__ultoa_invert+0x84>
 8ac:	a9 f7       	brne	.-22     	; 0x898 <__ultoa_invert+0x6c>
 8ae:	ea cf       	rjmp	.-44     	; 0x884 <__ultoa_invert+0x58>
 8b0:	b4 e0       	ldi	r27, 0x04	; 4
 8b2:	a6 95       	lsr	r26
 8b4:	97 95       	ror	r25
 8b6:	87 95       	ror	r24
 8b8:	77 95       	ror	r23
 8ba:	67 95       	ror	r22
 8bc:	ba 95       	dec	r27
 8be:	c9 f7       	brne	.-14     	; 0x8b2 <__ultoa_invert+0x86>
 8c0:	00 97       	sbiw	r24, 0x00	; 0
 8c2:	61 05       	cpc	r22, r1
 8c4:	71 05       	cpc	r23, r1
 8c6:	08 95       	ret
 8c8:	9b 01       	movw	r18, r22
 8ca:	ac 01       	movw	r20, r24
 8cc:	0a 2e       	mov	r0, r26
 8ce:	06 94       	lsr	r0
 8d0:	57 95       	ror	r21
 8d2:	47 95       	ror	r20
 8d4:	37 95       	ror	r19
 8d6:	27 95       	ror	r18
 8d8:	ba 95       	dec	r27
 8da:	c9 f7       	brne	.-14     	; 0x8ce <__ultoa_invert+0xa2>
 8dc:	62 0f       	add	r22, r18
 8de:	73 1f       	adc	r23, r19
 8e0:	84 1f       	adc	r24, r20
 8e2:	95 1f       	adc	r25, r21
 8e4:	a0 1d       	adc	r26, r0
 8e6:	08 95       	ret

Disassembly of section .text.libgcc.prologue:

00000960 <__prologue_saves__>:
 960:	2f 92       	push	r2
 962:	3f 92       	push	r3
 964:	4f 92       	push	r4
 966:	5f 92       	push	r5
 968:	6f 92       	push	r6
 96a:	7f 92       	push	r7
 96c:	8f 92       	push	r8
 96e:	9f 92       	push	r9
 970:	af 92       	push	r10
 972:	bf 92       	push	r11
 974:	cf 92       	push	r12
 976:	df 92       	push	r13
 978:	ef 92       	push	r14
 97a:	ff 92       	push	r15
 97c:	0f 93       	push	r16
 97e:	1f 93       	push	r17
 980:	cf 93       	push	r28
 982:	df 93       	push	r29
 984:	cd b7       	in	r28, 0x3d	; 61
 986:	de b7       	in	r29, 0x3e	; 62
 988:	ca 1b       	sub	r28, r26
 98a:	db 0b       	sbc	r29, r27
 98c:	0f b6       	in	r0, 0x3f	; 63
 98e:	f8 94       	cli
 990:	de bf       	out	0x3e, r29	; 62
 992:	0f be       	out	0x3f, r0	; 63
 994:	cd bf       	out	0x3d, r28	; 61
 996:	09 94       	ijmp

Disassembly of section .text.libgcc.prologue:

000009ce <__epilogue_restores__>:
 9ce:	2a 88       	ldd	r2, Y+18	; 0x12
 9d0:	39 88       	ldd	r3, Y+17	; 0x11
 9d2:	48 88       	ldd	r4, Y+16	; 0x10
 9d4:	5f 84       	ldd	r5, Y+15	; 0x0f
 9d6:	6e 84       	ldd	r6, Y+14	; 0x0e
 9d8:	7d 84       	ldd	r7, Y+13	; 0x0d
 9da:	8c 84       	ldd	r8, Y+12	; 0x0c
 9dc:	9b 84       	ldd	r9, Y+11	; 0x0b
 9de:	aa 84       	ldd	r10, Y+10	; 0x0a
 9e0:	b9 84       	ldd	r11, Y+9	; 0x09
 9e2:	c8 84       	ldd	r12, Y+8	; 0x08
 9e4:	df 80       	ldd	r13, Y+7	; 0x07
 9e6:	ee 80       	ldd	r14, Y+6	; 0x06
 9e8:	fd 80       	ldd	r15, Y+5	; 0x05
 9ea:	0c 81       	ldd	r16, Y+4	; 0x04
 9ec:	1b 81       	ldd	r17, Y+3	; 0x03
 9ee:	aa 81       	ldd	r26, Y+2	; 0x02
 9f0:	b9 81       	ldd	r27, Y+1	; 0x01
 9f2:	ce 0f       	add	r28, r30
 9f4:	d1 1d       	adc	r29, r1
 9f6:	0f b6       	in	r0, 0x3f	; 63
 9f8:	f8 94       	cli
 9fa:	de bf       	out	0x3e, r29	; 62
 9fc:	0f be       	out	0x3f, r0	; 63
 9fe:	cd bf       	out	0x3d, r28	; 61
 a00:	ed 01       	movw	r28, r26
 a02:	08 95       	ret
