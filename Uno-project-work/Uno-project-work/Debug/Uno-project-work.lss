
Uno-project-work.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  000009fe  2**0
                  ALLOC, LOAD, DATA
  1 .text         000000ce  00000000  00000000  000000d4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000006  00800100  00800100  000009fe  2**0
                  ALLOC
  3 .comment      0000005b  00000000  00000000  000009fe  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 00000048  00000000  00000000  00000a59  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000ceb  00000000  00000000  00000aa1  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000822  00000000  00000000  0000178c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000003ba  00000000  00000000  00001fae  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000000a8  00000000  00000000  00002368  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000208  00000000  00000000  00002410  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000001da  00000000  00000000  00002618  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000038  00000000  00000000  000027f2  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .text         00000004  00000908  00000908  000009dc  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 13 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0000282c  2**2
                  CONTENTS, READONLY, DEBUGGING
 14 .text.USART_init 0000001e  000008b2  000008b2  00000986  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 15 .text.USART_Transmit 0000000e  000008ec  000008ec  000009c0  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 16 .text.USART_Receive 0000000e  000008fa  000008fa  000009ce  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 17 .text.__vector_11 0000001c  000008d0  000008d0  000009a4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 18 .text.receive_data_from_mega 000000a2  000006c6  000006c6  0000079a  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 19 .progmemx.data 00000019  000000ce  000000ce  000001a2  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, PROGMEMX
 20 .text.main    000000da  00000530  00000530  00000604  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 21 .data.uart_input 0000000f  00800106  0000090c  000009e0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
 22 .data.uart_output 0000000f  00800115  0000091b  000009ef  2**0
                  CONTENTS, ALLOC, LOAD, DATA
 23 .bss.g_STATE  00000001  00800124  00800124  000009fe  2**0
                  ALLOC
 24 .text.avrlibc 0000002e  00000884  00000884  00000958  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 25 .text.avrlibc 00000448  000000e8  000000e8  000001bc  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 26 .text.avrlibc 00000036  00000818  00000818  000008ec  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 27 .text.avrlibc 00000078  00000768  00000768  0000083c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 28 .text.avrlibc 000000bc  0000060a  0000060a  000006de  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 29 .text.libgcc.prologue 00000038  000007e0  000007e0  000008b4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 30 .text.libgcc.prologue 00000036  0000084e  0000084e  00000922  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 3d 00 	jmp	0x7a	; 0x7a <__ctors_end>
   4:	0c 94 84 04 	jmp	0x908	; 0x908 <__bad_interrupt>
   8:	0c 94 84 04 	jmp	0x908	; 0x908 <__bad_interrupt>
   c:	0c 94 84 04 	jmp	0x908	; 0x908 <__bad_interrupt>
  10:	0c 94 84 04 	jmp	0x908	; 0x908 <__bad_interrupt>
  14:	0c 94 84 04 	jmp	0x908	; 0x908 <__bad_interrupt>
  18:	0c 94 84 04 	jmp	0x908	; 0x908 <__bad_interrupt>
  1c:	0c 94 84 04 	jmp	0x908	; 0x908 <__bad_interrupt>
  20:	0c 94 84 04 	jmp	0x908	; 0x908 <__bad_interrupt>
  24:	0c 94 84 04 	jmp	0x908	; 0x908 <__bad_interrupt>
  28:	0c 94 84 04 	jmp	0x908	; 0x908 <__bad_interrupt>
  2c:	0c 94 68 04 	jmp	0x8d0	; 0x8d0 <__vector_11>
  30:	0c 94 84 04 	jmp	0x908	; 0x908 <__bad_interrupt>
  34:	0c 94 84 04 	jmp	0x908	; 0x908 <__bad_interrupt>
  38:	0c 94 84 04 	jmp	0x908	; 0x908 <__bad_interrupt>
  3c:	0c 94 84 04 	jmp	0x908	; 0x908 <__bad_interrupt>
  40:	0c 94 84 04 	jmp	0x908	; 0x908 <__bad_interrupt>
  44:	0c 94 84 04 	jmp	0x908	; 0x908 <__bad_interrupt>
  48:	0c 94 84 04 	jmp	0x908	; 0x908 <__bad_interrupt>
  4c:	0c 94 84 04 	jmp	0x908	; 0x908 <__bad_interrupt>
  50:	0c 94 84 04 	jmp	0x908	; 0x908 <__bad_interrupt>
  54:	0c 94 84 04 	jmp	0x908	; 0x908 <__bad_interrupt>
  58:	0c 94 84 04 	jmp	0x908	; 0x908 <__bad_interrupt>
  5c:	0c 94 84 04 	jmp	0x908	; 0x908 <__bad_interrupt>
  60:	0c 94 84 04 	jmp	0x908	; 0x908 <__bad_interrupt>
  64:	0c 94 84 04 	jmp	0x908	; 0x908 <__bad_interrupt>

00000068 <.dinit>:
  68:	01 00       	.word	0x0001	; ????
  6a:	01 06       	cpc	r0, r17
  6c:	80 01       	movw	r16, r0
  6e:	06 01       	movw	r0, r12
  70:	24 00       	.word	0x0024	; ????
  72:	09 0c       	add	r0, r9
  74:	01 24       	eor	r0, r1
  76:	01 25       	eor	r16, r1
  78:	80 00       	.word	0x0080	; ????

0000007a <__ctors_end>:
  7a:	11 24       	eor	r1, r1
  7c:	1f be       	out	0x3f, r1	; 63
  7e:	cf ef       	ldi	r28, 0xFF	; 255
  80:	d8 e0       	ldi	r29, 0x08	; 8
  82:	de bf       	out	0x3e, r29	; 62
  84:	cd bf       	out	0x3d, r28	; 61

00000086 <__do_copy_data>:
  86:	e8 e6       	ldi	r30, 0x68	; 104
  88:	f0 e0       	ldi	r31, 0x00	; 0
  8a:	40 e0       	ldi	r20, 0x00	; 0
  8c:	17 c0       	rjmp	.+46     	; 0xbc <__do_clear_bss+0x8>
  8e:	b5 91       	lpm	r27, Z+
  90:	a5 91       	lpm	r26, Z+
  92:	35 91       	lpm	r19, Z+
  94:	25 91       	lpm	r18, Z+
  96:	05 91       	lpm	r16, Z+
  98:	07 fd       	sbrc	r16, 7
  9a:	0c c0       	rjmp	.+24     	; 0xb4 <__do_clear_bss>
  9c:	95 91       	lpm	r25, Z+
  9e:	85 91       	lpm	r24, Z+
  a0:	ef 01       	movw	r28, r30
  a2:	f9 2f       	mov	r31, r25
  a4:	e8 2f       	mov	r30, r24
  a6:	05 90       	lpm	r0, Z+
  a8:	0d 92       	st	X+, r0
  aa:	a2 17       	cp	r26, r18
  ac:	b3 07       	cpc	r27, r19
  ae:	d9 f7       	brne	.-10     	; 0xa6 <__do_copy_data+0x20>
  b0:	fe 01       	movw	r30, r28
  b2:	04 c0       	rjmp	.+8      	; 0xbc <__do_clear_bss+0x8>

000000b4 <__do_clear_bss>:
  b4:	1d 92       	st	X+, r1
  b6:	a2 17       	cp	r26, r18
  b8:	b3 07       	cpc	r27, r19
  ba:	e1 f7       	brne	.-8      	; 0xb4 <__do_clear_bss>
  bc:	e9 37       	cpi	r30, 0x79	; 121
  be:	f4 07       	cpc	r31, r20
  c0:	31 f7       	brne	.-52     	; 0x8e <__do_copy_data+0x8>
  c2:	0e 94 98 02 	call	0x530	; 0x530 <main>
  c6:	0c 94 65 00 	jmp	0xca	; 0xca <_exit>

000000ca <_exit>:
  ca:	f8 94       	cli

000000cc <__stop_program>:
  cc:	ff cf       	rjmp	.-2      	; 0xcc <__stop_program>

Disassembly of section .text:

00000908 <__bad_interrupt>:
 908:	0c 94 00 00 	jmp	0	; 0x0 <__TEXT_REGION_ORIGIN__>

Disassembly of section .text.USART_init:

000008b2 <USART_init>:

static void
USART_init(uint16_t ubrr) // unsigned int
{
	/* Set baud rate in the USART Baud Rate Registers (UBRR) */
	UBRR0H = (unsigned char) (ubrr >> 8);
 8b2:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7f80c5>
	UBRR0L = (unsigned char) ubrr;
 8b6:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7f80c4>
	
	/* Enable receiver and transmitter on RX0 and TX0 */
	UCSR0B |= (1 << RXEN0) | (1 << TXEN0); //NOTE: the ATmega328p has 1 UART: 0
 8ba:	e1 ec       	ldi	r30, 0xC1	; 193
 8bc:	f0 e0       	ldi	r31, 0x00	; 0
 8be:	80 81       	ld	r24, Z
 8c0:	88 61       	ori	r24, 0x18	; 24
 8c2:	80 83       	st	Z, r24
	// UCSR0B |= (1 << 4) | (1 << 3);
	
	/* Set frame format: 8 bit data, 2 stop bit */
	UCSR0C |= (1 << USBS0) | (3 << UCSZ00);
 8c4:	e2 ec       	ldi	r30, 0xC2	; 194
 8c6:	f0 e0       	ldi	r31, 0x00	; 0
 8c8:	80 81       	ld	r24, Z
 8ca:	8e 60       	ori	r24, 0x0E	; 14
 8cc:	80 83       	st	Z, r24
 8ce:	08 95       	ret

Disassembly of section .text.USART_Transmit:

000008ec <USART_Transmit>:

static void
USART_Transmit(unsigned char data, FILE *stream)
{
	/* Wait until the transmit buffer is empty*/
	while(!(UCSR0A & (1 << UDRE0)))
 8ec:	90 91 c0 00 	lds	r25, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
 8f0:	95 ff       	sbrs	r25, 5
 8f2:	fc cf       	rjmp	.-8      	; 0x8ec <USART_Transmit>
	{
		;
	}
	
	/* Put the data into a buffer, then send/transmit the data */
	UDR0 = data;
 8f4:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
 8f8:	08 95       	ret

Disassembly of section .text.USART_Receive:

000008fa <USART_Receive>:

static char
USART_Receive(FILE *stream)
{
	/* Wait until the transmit buffer is empty*/
	while(!(UCSR0A & (1 << UDRE0)))
 8fa:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
 8fe:	85 ff       	sbrs	r24, 5
 900:	fc cf       	rjmp	.-8      	; 0x8fa <USART_Receive>
	{
		;
	}
	
	/* Get the received data from the buffer */
	return UDR0;
 902:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
}
 906:	08 95       	ret

Disassembly of section .text.__vector_11:

000008d0 <__vector_11>:
FILE uart_output = FDEV_SETUP_STREAM(USART_Transmit, NULL, _FDEV_SETUP_WRITE);
FILE uart_input = FDEV_SETUP_STREAM(NULL, USART_Receive, _FDEV_SETUP_READ);

ISR
(TIMER1_COMPA_vect)
{
 8d0:	1f 92       	push	r1
 8d2:	0f 92       	push	r0
 8d4:	0f b6       	in	r0, 0x3f	; 63
 8d6:	0f 92       	push	r0
 8d8:	11 24       	eor	r1, r1
	TCNT1 = 0; // reset timer counter
 8da:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7f8085>
 8de:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7f8084>
}
 8e2:	0f 90       	pop	r0
 8e4:	0f be       	out	0x3f, r0	; 63
 8e6:	0f 90       	pop	r0
 8e8:	1f 90       	pop	r1
 8ea:	18 95       	reti

Disassembly of section .text.receive_data_from_mega:

000006c6 <receive_data_from_mega>:

void
receive_data_from_mega()
{
 6c6:	cf 93       	push	r28
 6c8:	df 93       	push	r29
 6ca:	cd b7       	in	r28, 0x3d	; 61
 6cc:	de b7       	in	r29, 0x3e	; 62
 6ce:	64 97       	sbiw	r28, 0x14	; 20
 6d0:	0f b6       	in	r0, 0x3f	; 63
 6d2:	f8 94       	cli
 6d4:	de bf       	out	0x3e, r29	; 62
 6d6:	0f be       	out	0x3f, r0	; 63
 6d8:	cd bf       	out	0x3d, r28	; 61
    USART_init(MYUBRR);
 6da:	87 e6       	ldi	r24, 0x67	; 103
 6dc:	90 e0       	ldi	r25, 0x00	; 0
 6de:	0e 94 59 04 	call	0x8b2	; 0x8b2 <USART_init>
    
    // redirect the stdin and stdout to UART functions
    stdout = &uart_output;
 6e2:	e0 e0       	ldi	r30, 0x00	; 0
 6e4:	f1 e0       	ldi	r31, 0x01	; 1
 6e6:	85 e1       	ldi	r24, 0x15	; 21
 6e8:	91 e0       	ldi	r25, 0x01	; 1
 6ea:	93 83       	std	Z+3, r25	; 0x03
 6ec:	82 83       	std	Z+2, r24	; 0x02
    stdin = &uart_input;
 6ee:	86 e0       	ldi	r24, 0x06	; 6
 6f0:	91 e0       	ldi	r25, 0x01	; 1
 6f2:	91 83       	std	Z+1, r25	; 0x01
 6f4:	80 83       	st	Z, r24
    char test_char_array[16]; // 16-bit array, assumes that the int given is 16-bits
    uint8_t twi_index = 0;
    uint8_t twi_status = 0;
    
    // slave address
    TWAR = 0b10101010; // same as 170 DEC
 6f6:	8a ea       	ldi	r24, 0xAA	; 170
 6f8:	80 93 ba 00 	sts	0x00BA, r24	; 0x8000ba <__TEXT_REGION_LENGTH__+0x7f80ba>
    // Slave address 85 + TWI General Call Recognition Enable Bit '0' LSB ---> 170
    
    // Initialize TWI slave
    TWCR |= (1 << TWEA) | (1 << TWEN);
 6fc:	ec eb       	ldi	r30, 0xBC	; 188
 6fe:	f0 e0       	ldi	r31, 0x00	; 0
 700:	80 81       	ld	r24, Z
 702:	84 64       	ori	r24, 0x44	; 68
 704:	80 83       	st	Z, r24
    TWCR &= ~(1 << TWSTA) & ~(1 << TWSTO);
 706:	80 81       	ld	r24, Z
 708:	8f 7c       	andi	r24, 0xCF	; 207
 70a:	80 83       	st	Z, r24
    //TWCR |= (1 << 6) | (1 << 2);
    //TWCR &= ~(1 << 5) & ~(1 << 4);
	
	// wait for TWINT to set, meaning that we are waiting for a transmission
	while(!(TWCR & (1 << TWINT)))
 70c:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 710:	88 23       	and	r24, r24
 712:	e4 f7       	brge	.-8      	; 0x70c <receive_data_from_mega+0x46>
	{
		;
	}
    // "clear" TWINT and generate acknowledgment ACK (TWEA)
    TWCR |=  (1 << TWINT) | (1 << TWEA) | (1 << TWEN);
 714:	ec eb       	ldi	r30, 0xBC	; 188
 716:	f0 e0       	ldi	r31, 0x00	; 0
 718:	80 81       	ld	r24, Z
 71a:	84 6c       	ori	r24, 0xC4	; 196
 71c:	80 83       	st	Z, r24
        
    // wait for the the TWINT to set
    while(!(TWCR & (1 << TWINT)))
 71e:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 722:	88 23       	and	r24, r24
 724:	e4 f7       	brge	.-8      	; 0x71e <receive_data_from_mega+0x58>
    {
	    ;
    }
        
    // get TWI status
    twi_status = (TWSR & 0xF8);
 726:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7f80b9>
 72a:	88 7f       	andi	r24, 0xF8	; 248

    // if status indicates that previous response was either slave address or general call and ACK was returned
    // store the data register value to twi_receive_data
    if((twi_status == 0x80) || (twi_status == 0x90))
 72c:	80 38       	cpi	r24, 0x80	; 128
 72e:	11 f0       	breq	.+4      	; 0x734 <receive_data_from_mega+0x6e>
 730:	80 39       	cpi	r24, 0x90	; 144
 732:	19 f4       	brne	.+6      	; 0x73a <receive_data_from_mega+0x74>
    {
	    twi_receive_data[twi_index] = TWDR;
 734:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7f80bb>
	    twi_index++;
 738:	0e c0       	rjmp	.+28     	; 0x756 <receive_data_from_mega+0x90>
    }
    else if((twi_status == 0x88) || (twi_status == 0x98))
 73a:	88 38       	cpi	r24, 0x88	; 136
 73c:	11 f0       	breq	.+4      	; 0x742 <receive_data_from_mega+0x7c>
 73e:	88 39       	cpi	r24, 0x98	; 152
 740:	19 f4       	brne	.+6      	; 0x748 <receive_data_from_mega+0x82>
    {
	    // if status indicates that previous response was either slave address or general call and NOT ACK was returned
	    // store the data register value to twi_receive_data
	    twi_receive_data[twi_index] = TWDR;
 742:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7f80bb>
	    twi_index++;
 746:	07 c0       	rjmp	.+14     	; 0x756 <receive_data_from_mega+0x90>
    }
    else if(twi_status == 0xA0)
 748:	80 3a       	cpi	r24, 0xA0	; 160
 74a:	29 f4       	brne	.+10     	; 0x756 <receive_data_from_mega+0x90>
    {
	    // Stop condition or repeated start was received
	    // Clear interrupt flag
	    TWCR |= (1 << TWINT);
 74c:	ec eb       	ldi	r30, 0xBC	; 188
 74e:	f0 e0       	ldi	r31, 0x00	; 0
 750:	80 81       	ld	r24, Z
 752:	80 68       	ori	r24, 0x80	; 128
 754:	80 83       	st	Z, r24
	    printf(twi_receive_data);
	    twi_index = 0;
	        
    }

}
 756:	64 96       	adiw	r28, 0x14	; 20
 758:	0f b6       	in	r0, 0x3f	; 63
 75a:	f8 94       	cli
 75c:	de bf       	out	0x3e, r29	; 62
 75e:	0f be       	out	0x3f, r0	; 63
 760:	cd bf       	out	0x3d, r28	; 61
 762:	df 91       	pop	r29
 764:	cf 91       	pop	r28
 766:	08 95       	ret

Disassembly of section .text.main:

00000530 <main>:

int 
main(void)
{
	USART_init(MYUBRR);
 530:	87 e6       	ldi	r24, 0x67	; 103
 532:	90 e0       	ldi	r25, 0x00	; 0
 534:	0e 94 59 04 	call	0x8b2	; 0x8b2 <USART_init>
    stdout = &uart_output;
 538:	e0 e0       	ldi	r30, 0x00	; 0
 53a:	f1 e0       	ldi	r31, 0x01	; 1
 53c:	85 e1       	ldi	r24, 0x15	; 21
 53e:	91 e0       	ldi	r25, 0x01	; 1
 540:	93 83       	std	Z+3, r25	; 0x03
 542:	82 83       	std	Z+2, r24	; 0x02
    stdin = &uart_input;	
 544:	86 e0       	ldi	r24, 0x06	; 6
 546:	91 e0       	ldi	r25, 0x01	; 1
 548:	91 83       	std	Z+1, r25	; 0x01
 54a:	80 83       	st	Z, r24
    /* set up the ports and pins */
    DDRB |= (1 << PB1); // OC1A is located in digital pin 9
 54c:	84 b1       	in	r24, 0x04	; 4
 54e:	82 60       	ori	r24, 0x02	; 2
 550:	84 b9       	out	0x04, r24	; 4
    
    // Enable interrupts
    sei();
 552:	78 94       	sei
    
    /* set up the 16-bit timer/counter1, mode 9 used */
    TCCR1B  = 0; // reset timer/counter 1
 554:	a1 e8       	ldi	r26, 0x81	; 129
 556:	b0 e0       	ldi	r27, 0x00	; 0
 558:	1c 92       	st	X, r1
    TCNT1   = 0;
 55a:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7f8085>
 55e:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7f8084>
    TCCR1A |= (1 << 6); // set compare output mode to toggle
 562:	e0 e8       	ldi	r30, 0x80	; 128
 564:	f0 e0       	ldi	r31, 0x00	; 0
 566:	80 81       	ld	r24, Z
 568:	80 64       	ori	r24, 0x40	; 64
 56a:	80 83       	st	Z, r24
    // TCCR1A |= 0b01000000;
    // TCCR1A |= 0x40;
    
    // mode 9 phase correct
    TCCR1A |= (1 << 0); // set register A WGM[1:0] bits
 56c:	80 81       	ld	r24, Z
 56e:	81 60       	ori	r24, 0x01	; 1
 570:	80 83       	st	Z, r24
    // TCCR1A |= 0b00000001;
    TCCR1B |= (1 << 4); // set register B WBM[3:2] bits
 572:	8c 91       	ld	r24, X
 574:	80 61       	ori	r24, 0x10	; 16
 576:	8c 93       	st	X, r24
    // TCCR1B |= 0b00010000;
    
    TIMSK1 |= (1 << 1); // enable compare match A interrupt
 578:	ef e6       	ldi	r30, 0x6F	; 111
 57a:	f0 e0       	ldi	r31, 0x00	; 0
 57c:	80 81       	ld	r24, Z
 57e:	82 60       	ori	r24, 0x02	; 2
 580:	80 83       	st	Z, r24
    // TIMSK1 |= 0b00000100;
    
    OCR1A = 15297; // C5 523 Hz, no prescaler
 582:	81 ec       	ldi	r24, 0xC1	; 193
 584:	9b e3       	ldi	r25, 0x3B	; 59
 586:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7f8089>
 58a:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7f8088>
	
	
	
    while(1)
    {
		switch (g_STATE)
 58e:	80 91 24 01 	lds	r24, 0x0124	; 0x800124 <g_STATE>
 592:	88 23       	and	r24, r24
 594:	19 f0       	breq	.+6      	; 0x59c <main+0x6c>
 596:	81 30       	cpi	r24, 0x01	; 1
 598:	91 f0       	breq	.+36     	; 0x5be <main+0x8e>
 59a:	f9 cf       	rjmp	.-14     	; 0x58e <main+0x5e>
		{
			case LISTENING:
				printf("Waiting data\n\r");
 59c:	8e ec       	ldi	r24, 0xCE	; 206
 59e:	90 e0       	ldi	r25, 0x00	; 0
 5a0:	a0 e0       	ldi	r26, 0x00	; 0
 5a2:	af 93       	push	r26
 5a4:	9f 93       	push	r25
 5a6:	8f 93       	push	r24
 5a8:	0e 94 42 04 	call	0x884	; 0x884 <printf>
				receive_data_from_mega();
 5ac:	0e 94 63 03 	call	0x6c6	; 0x6c6 <receive_data_from_mega>
				g_STATE = 1;
 5b0:	81 e0       	ldi	r24, 0x01	; 1
 5b2:	80 93 24 01 	sts	0x0124, r24	; 0x800124 <g_STATE>
				
			break;
 5b6:	0f 90       	pop	r0
 5b8:	0f 90       	pop	r0
 5ba:	0f 90       	pop	r0
 5bc:	e8 cf       	rjmp	.-48     	; 0x58e <main+0x5e>
			
			case ALARM:
				TCCR1B |= (1 << 0);
 5be:	c1 e8       	ldi	r28, 0x81	; 129
 5c0:	d0 e0       	ldi	r29, 0x00	; 0
 5c2:	88 81       	ld	r24, Y
 5c4:	81 60       	ori	r24, 0x01	; 1
 5c6:	88 83       	st	Y, r24
				printf("ALARM!!\n\r");
 5c8:	8d ed       	ldi	r24, 0xDD	; 221
 5ca:	90 e0       	ldi	r25, 0x00	; 0
 5cc:	a0 e0       	ldi	r26, 0x00	; 0
 5ce:	af 93       	push	r26
 5d0:	9f 93       	push	r25
 5d2:	8f 93       	push	r24
 5d4:	0e 94 42 04 	call	0x884	; 0x884 <printf>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 5d8:	2f ef       	ldi	r18, 0xFF	; 255
 5da:	81 ee       	ldi	r24, 0xE1	; 225
 5dc:	94 e0       	ldi	r25, 0x04	; 4
 5de:	21 50       	subi	r18, 0x01	; 1
 5e0:	80 40       	sbci	r24, 0x00	; 0
 5e2:	90 40       	sbci	r25, 0x00	; 0
 5e4:	e1 f7       	brne	.-8      	; 0x5de <main+0xae>
 5e6:	00 c0       	rjmp	.+0      	; 0x5e8 <main+0xb8>
 5e8:	00 00       	nop
				_delay_ms(100);
				TCCR1B &= ~(1 << 0);
 5ea:	88 81       	ld	r24, Y
 5ec:	8e 7f       	andi	r24, 0xFE	; 254
 5ee:	88 83       	st	Y, r24
 5f0:	2f ef       	ldi	r18, 0xFF	; 255
 5f2:	89 e6       	ldi	r24, 0x69	; 105
 5f4:	98 e1       	ldi	r25, 0x18	; 24
 5f6:	21 50       	subi	r18, 0x01	; 1
 5f8:	80 40       	sbci	r24, 0x00	; 0
 5fa:	90 40       	sbci	r25, 0x00	; 0
 5fc:	e1 f7       	brne	.-8      	; 0x5f6 <main+0xc6>
 5fe:	00 c0       	rjmp	.+0      	; 0x600 <main+0xd0>
 600:	00 00       	nop
 602:	0f 90       	pop	r0
 604:	0f 90       	pop	r0
 606:	0f 90       	pop	r0
 608:	c2 cf       	rjmp	.-124    	; 0x58e <main+0x5e>

Disassembly of section .text.avrlibc:

00000884 <printf>:
 884:	a0 e0       	ldi	r26, 0x00	; 0
 886:	b0 e0       	ldi	r27, 0x00	; 0
 888:	e8 e4       	ldi	r30, 0x48	; 72
 88a:	f4 e0       	ldi	r31, 0x04	; 4
 88c:	0c 94 00 04 	jmp	0x800	; 0x800 <__DATA_REGION_LENGTH__>
 890:	9e 01       	movw	r18, r28
 892:	2b 5f       	subi	r18, 0xFB	; 251
 894:	3f 4f       	sbci	r19, 0xFF	; 255
 896:	f9 01       	movw	r30, r18
 898:	41 91       	ld	r20, Z+
 89a:	51 91       	ld	r21, Z+
 89c:	61 91       	ld	r22, Z+
 89e:	9f 01       	movw	r18, r30
 8a0:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <__DATA_REGION_ORIGIN__+0x2>
 8a4:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <__DATA_REGION_ORIGIN__+0x3>
 8a8:	0e 94 74 00 	call	0xe8	; 0xe8 <vfprintf>
 8ac:	e2 e0       	ldi	r30, 0x02	; 2
 8ae:	0c 94 37 04 	jmp	0x86e	; 0x86e <__epilogue_restores__+0x20>

Disassembly of section .text.avrlibc:

000000e8 <vfprintf>:
  e8:	2f 92       	push	r2
  ea:	3f 92       	push	r3
  ec:	4f 92       	push	r4
  ee:	6f 92       	push	r6
  f0:	7f 92       	push	r7
  f2:	8f 92       	push	r8
  f4:	9f 92       	push	r9
  f6:	af 92       	push	r10
  f8:	bf 92       	push	r11
  fa:	cf 92       	push	r12
  fc:	df 92       	push	r13
  fe:	ef 92       	push	r14
 100:	ff 92       	push	r15
 102:	0f 93       	push	r16
 104:	1f 93       	push	r17
 106:	cf 93       	push	r28
 108:	df 93       	push	r29
 10a:	cd b7       	in	r28, 0x3d	; 61
 10c:	de b7       	in	r29, 0x3e	; 62
 10e:	62 97       	sbiw	r28, 0x12	; 18
 110:	0f b6       	in	r0, 0x3f	; 63
 112:	f8 94       	cli
 114:	de bf       	out	0x3e, r29	; 62
 116:	0f be       	out	0x3f, r0	; 63
 118:	cd bf       	out	0x3d, r28	; 61
 11a:	6c 01       	movw	r12, r24
 11c:	3a 01       	movw	r6, r20
 11e:	86 2e       	mov	r8, r22
 120:	79 01       	movw	r14, r18
 122:	fc 01       	movw	r30, r24
 124:	10 86       	std	Z+8, r1	; 0x08
 126:	17 82       	std	Z+7, r1	; 0x07
 128:	84 81       	ldd	r24, Z+4	; 0x04
 12a:	81 ff       	sbrs	r24, 1
 12c:	e7 c1       	rjmp	.+974    	; 0x4fc <__EEPROM_REGION_LENGTH__+0xfc>
 12e:	9e 01       	movw	r18, r28
 130:	2f 5f       	subi	r18, 0xFF	; 255
 132:	3f 4f       	sbci	r19, 0xFF	; 255
 134:	3d 87       	std	Y+13, r19	; 0x0d
 136:	2c 87       	std	Y+12, r18	; 0x0c
 138:	c9 01       	movw	r24, r18
 13a:	a0 e8       	ldi	r26, 0x80	; 128
 13c:	88 8b       	std	Y+16, r24	; 0x10
 13e:	99 8b       	std	Y+17, r25	; 0x11
 140:	aa 8b       	std	Y+18, r26	; 0x12
 142:	9f e3       	ldi	r25, 0x3F	; 63
 144:	99 2e       	mov	r9, r25
 146:	f3 01       	movw	r30, r6
 148:	84 91       	lpm	r24, Z
 14a:	87 fc       	sbrc	r8, 7
 14c:	80 81       	ld	r24, Z
 14e:	88 23       	and	r24, r24
 150:	09 f4       	brne	.+2      	; 0x154 <vfprintf+0x6c>
 152:	d0 c1       	rjmp	.+928    	; 0x4f4 <__EEPROM_REGION_LENGTH__+0xf4>
 154:	48 2d       	mov	r20, r8
 156:	93 01       	movw	r18, r6
 158:	2f 5f       	subi	r18, 0xFF	; 255
 15a:	3f 4f       	sbci	r19, 0xFF	; 255
 15c:	4f 4f       	sbci	r20, 0xFF	; 255
 15e:	85 32       	cpi	r24, 0x25	; 37
 160:	19 f0       	breq	.+6      	; 0x168 <vfprintf+0x80>
 162:	39 01       	movw	r6, r18
 164:	84 2e       	mov	r8, r20
 166:	0a c0       	rjmp	.+20     	; 0x17c <vfprintf+0x94>
 168:	f9 01       	movw	r30, r18
 16a:	84 91       	lpm	r24, Z
 16c:	47 fd       	sbrc	r20, 7
 16e:	80 81       	ld	r24, Z
 170:	92 e0       	ldi	r25, 0x02	; 2
 172:	69 0e       	add	r6, r25
 174:	71 1c       	adc	r7, r1
 176:	81 1c       	adc	r8, r1
 178:	85 32       	cpi	r24, 0x25	; 37
 17a:	29 f4       	brne	.+10     	; 0x186 <vfprintf+0x9e>
 17c:	b6 01       	movw	r22, r12
 17e:	90 e0       	ldi	r25, 0x00	; 0
 180:	0e 94 b4 03 	call	0x768	; 0x768 <fputc>
 184:	e0 cf       	rjmp	.-64     	; 0x146 <vfprintf+0x5e>
 186:	b1 2c       	mov	r11, r1
 188:	00 e0       	ldi	r16, 0x00	; 0
 18a:	10 e0       	ldi	r17, 0x00	; 0
 18c:	10 32       	cpi	r17, 0x20	; 32
 18e:	a0 f4       	brcc	.+40     	; 0x1b8 <vfprintf+0xd0>
 190:	8b 32       	cpi	r24, 0x2B	; 43
 192:	69 f0       	breq	.+26     	; 0x1ae <vfprintf+0xc6>
 194:	30 f4       	brcc	.+12     	; 0x1a2 <vfprintf+0xba>
 196:	80 32       	cpi	r24, 0x20	; 32
 198:	59 f0       	breq	.+22     	; 0x1b0 <vfprintf+0xc8>
 19a:	83 32       	cpi	r24, 0x23	; 35
 19c:	69 f4       	brne	.+26     	; 0x1b8 <vfprintf+0xd0>
 19e:	10 61       	ori	r17, 0x10	; 16
 1a0:	2c c0       	rjmp	.+88     	; 0x1fa <vfprintf+0x112>
 1a2:	8d 32       	cpi	r24, 0x2D	; 45
 1a4:	39 f0       	breq	.+14     	; 0x1b4 <vfprintf+0xcc>
 1a6:	80 33       	cpi	r24, 0x30	; 48
 1a8:	39 f4       	brne	.+14     	; 0x1b8 <vfprintf+0xd0>
 1aa:	11 60       	ori	r17, 0x01	; 1
 1ac:	26 c0       	rjmp	.+76     	; 0x1fa <vfprintf+0x112>
 1ae:	12 60       	ori	r17, 0x02	; 2
 1b0:	14 60       	ori	r17, 0x04	; 4
 1b2:	23 c0       	rjmp	.+70     	; 0x1fa <vfprintf+0x112>
 1b4:	18 60       	ori	r17, 0x08	; 8
 1b6:	21 c0       	rjmp	.+66     	; 0x1fa <vfprintf+0x112>
 1b8:	17 fd       	sbrc	r17, 7
 1ba:	29 c0       	rjmp	.+82     	; 0x20e <vfprintf+0x126>
 1bc:	90 ed       	ldi	r25, 0xD0	; 208
 1be:	98 0f       	add	r25, r24
 1c0:	9a 30       	cpi	r25, 0x0A	; 10
 1c2:	78 f4       	brcc	.+30     	; 0x1e2 <vfprintf+0xfa>
 1c4:	16 ff       	sbrs	r17, 6
 1c6:	06 c0       	rjmp	.+12     	; 0x1d4 <vfprintf+0xec>
 1c8:	aa e0       	ldi	r26, 0x0A	; 10
 1ca:	ba 9e       	mul	r11, r26
 1cc:	90 0d       	add	r25, r0
 1ce:	11 24       	eor	r1, r1
 1d0:	b9 2e       	mov	r11, r25
 1d2:	13 c0       	rjmp	.+38     	; 0x1fa <vfprintf+0x112>
 1d4:	ea e0       	ldi	r30, 0x0A	; 10
 1d6:	0e 9f       	mul	r16, r30
 1d8:	90 0d       	add	r25, r0
 1da:	11 24       	eor	r1, r1
 1dc:	09 2f       	mov	r16, r25
 1de:	10 62       	ori	r17, 0x20	; 32
 1e0:	0c c0       	rjmp	.+24     	; 0x1fa <vfprintf+0x112>
 1e2:	8e 32       	cpi	r24, 0x2E	; 46
 1e4:	21 f4       	brne	.+8      	; 0x1ee <vfprintf+0x106>
 1e6:	16 fd       	sbrc	r17, 6
 1e8:	85 c1       	rjmp	.+778    	; 0x4f4 <__EEPROM_REGION_LENGTH__+0xf4>
 1ea:	10 64       	ori	r17, 0x40	; 64
 1ec:	06 c0       	rjmp	.+12     	; 0x1fa <vfprintf+0x112>
 1ee:	8c 36       	cpi	r24, 0x6C	; 108
 1f0:	11 f4       	brne	.+4      	; 0x1f6 <vfprintf+0x10e>
 1f2:	10 68       	ori	r17, 0x80	; 128
 1f4:	02 c0       	rjmp	.+4      	; 0x1fa <vfprintf+0x112>
 1f6:	88 36       	cpi	r24, 0x68	; 104
 1f8:	51 f4       	brne	.+20     	; 0x20e <vfprintf+0x126>
 1fa:	f3 01       	movw	r30, r6
 1fc:	84 91       	lpm	r24, Z
 1fe:	87 fc       	sbrc	r8, 7
 200:	80 81       	ld	r24, Z
 202:	ff ef       	ldi	r31, 0xFF	; 255
 204:	6f 1a       	sub	r6, r31
 206:	7f 0a       	sbc	r7, r31
 208:	8f 0a       	sbc	r8, r31
 20a:	81 11       	cpse	r24, r1
 20c:	bf cf       	rjmp	.-130    	; 0x18c <vfprintf+0xa4>
 20e:	98 2f       	mov	r25, r24
 210:	9f 7d       	andi	r25, 0xDF	; 223
 212:	95 54       	subi	r25, 0x45	; 69
 214:	93 30       	cpi	r25, 0x03	; 3
 216:	28 f4       	brcc	.+10     	; 0x222 <vfprintf+0x13a>
 218:	24 e0       	ldi	r18, 0x04	; 4
 21a:	e2 0e       	add	r14, r18
 21c:	f1 1c       	adc	r15, r1
 21e:	99 82       	std	Y+1, r9	; 0x01
 220:	0f c0       	rjmp	.+30     	; 0x240 <vfprintf+0x158>
 222:	83 36       	cpi	r24, 0x63	; 99
 224:	31 f0       	breq	.+12     	; 0x232 <vfprintf+0x14a>
 226:	83 37       	cpi	r24, 0x73	; 115
 228:	91 f0       	breq	.+36     	; 0x24e <vfprintf+0x166>
 22a:	83 35       	cpi	r24, 0x53	; 83
 22c:	09 f0       	breq	.+2      	; 0x230 <vfprintf+0x148>
 22e:	63 c0       	rjmp	.+198    	; 0x2f6 <vfprintf+0x20e>
 230:	27 c0       	rjmp	.+78     	; 0x280 <vfprintf+0x198>
 232:	f7 01       	movw	r30, r14
 234:	80 81       	ld	r24, Z
 236:	89 83       	std	Y+1, r24	; 0x01
 238:	97 01       	movw	r18, r14
 23a:	2e 5f       	subi	r18, 0xFE	; 254
 23c:	3f 4f       	sbci	r19, 0xFF	; 255
 23e:	79 01       	movw	r14, r18
 240:	28 88       	ldd	r2, Y+16	; 0x10
 242:	39 88       	ldd	r3, Y+17	; 0x11
 244:	4a 88       	ldd	r4, Y+18	; 0x12
 246:	aa 24       	eor	r10, r10
 248:	a3 94       	inc	r10
 24a:	b1 2c       	mov	r11, r1
 24c:	17 c0       	rjmp	.+46     	; 0x27c <vfprintf+0x194>
 24e:	a7 01       	movw	r20, r14
 250:	4d 5f       	subi	r20, 0xFD	; 253
 252:	5f 4f       	sbci	r21, 0xFF	; 255
 254:	5f 87       	std	Y+15, r21	; 0x0f
 256:	4e 87       	std	Y+14, r20	; 0x0e
 258:	f7 01       	movw	r30, r14
 25a:	20 80       	ld	r2, Z
 25c:	31 80       	ldd	r3, Z+1	; 0x01
 25e:	42 80       	ldd	r4, Z+2	; 0x02
 260:	16 ff       	sbrs	r17, 6
 262:	03 c0       	rjmp	.+6      	; 0x26a <vfprintf+0x182>
 264:	4b 2d       	mov	r20, r11
 266:	50 e0       	ldi	r21, 0x00	; 0
 268:	02 c0       	rjmp	.+4      	; 0x26e <vfprintf+0x186>
 26a:	4f ef       	ldi	r20, 0xFF	; 255
 26c:	5f ef       	ldi	r21, 0xFF	; 255
 26e:	84 2d       	mov	r24, r4
 270:	b1 01       	movw	r22, r2
 272:	0e 94 0c 04 	call	0x818	; 0x818 <strnlen>
 276:	5c 01       	movw	r10, r24
 278:	ee 84       	ldd	r14, Y+14	; 0x0e
 27a:	ff 84       	ldd	r15, Y+15	; 0x0f
 27c:	1f 77       	andi	r17, 0x7F	; 127
 27e:	18 c0       	rjmp	.+48     	; 0x2b0 <vfprintf+0x1c8>
 280:	97 01       	movw	r18, r14
 282:	2d 5f       	subi	r18, 0xFD	; 253
 284:	3f 4f       	sbci	r19, 0xFF	; 255
 286:	3f 87       	std	Y+15, r19	; 0x0f
 288:	2e 87       	std	Y+14, r18	; 0x0e
 28a:	f7 01       	movw	r30, r14
 28c:	20 80       	ld	r2, Z
 28e:	31 80       	ldd	r3, Z+1	; 0x01
 290:	42 80       	ldd	r4, Z+2	; 0x02
 292:	16 ff       	sbrs	r17, 6
 294:	03 c0       	rjmp	.+6      	; 0x29c <vfprintf+0x1b4>
 296:	4b 2d       	mov	r20, r11
 298:	50 e0       	ldi	r21, 0x00	; 0
 29a:	02 c0       	rjmp	.+4      	; 0x2a0 <vfprintf+0x1b8>
 29c:	4f ef       	ldi	r20, 0xFF	; 255
 29e:	5f ef       	ldi	r21, 0xFF	; 255
 2a0:	84 2d       	mov	r24, r4
 2a2:	b1 01       	movw	r22, r2
 2a4:	0e 94 0c 04 	call	0x818	; 0x818 <strnlen>
 2a8:	5c 01       	movw	r10, r24
 2aa:	10 68       	ori	r17, 0x80	; 128
 2ac:	ee 84       	ldd	r14, Y+14	; 0x0e
 2ae:	ff 84       	ldd	r15, Y+15	; 0x0f
 2b0:	13 fd       	sbrc	r17, 3
 2b2:	1d c0       	rjmp	.+58     	; 0x2ee <vfprintf+0x206>
 2b4:	80 2f       	mov	r24, r16
 2b6:	90 e0       	ldi	r25, 0x00	; 0
 2b8:	a8 16       	cp	r10, r24
 2ba:	b9 06       	cpc	r11, r25
 2bc:	c0 f4       	brcc	.+48     	; 0x2ee <vfprintf+0x206>
 2be:	b6 01       	movw	r22, r12
 2c0:	80 e2       	ldi	r24, 0x20	; 32
 2c2:	90 e0       	ldi	r25, 0x00	; 0
 2c4:	0e 94 b4 03 	call	0x768	; 0x768 <fputc>
 2c8:	01 50       	subi	r16, 0x01	; 1
 2ca:	f4 cf       	rjmp	.-24     	; 0x2b4 <vfprintf+0x1cc>
 2cc:	f1 01       	movw	r30, r2
 2ce:	84 91       	lpm	r24, Z
 2d0:	47 fc       	sbrc	r4, 7
 2d2:	80 81       	ld	r24, Z
 2d4:	ff ef       	ldi	r31, 0xFF	; 255
 2d6:	2f 1a       	sub	r2, r31
 2d8:	3f 0a       	sbc	r3, r31
 2da:	4f 0a       	sbc	r4, r31
 2dc:	b6 01       	movw	r22, r12
 2de:	90 e0       	ldi	r25, 0x00	; 0
 2e0:	0e 94 b4 03 	call	0x768	; 0x768 <fputc>
 2e4:	01 11       	cpse	r16, r1
 2e6:	01 50       	subi	r16, 0x01	; 1
 2e8:	21 e0       	ldi	r18, 0x01	; 1
 2ea:	a2 1a       	sub	r10, r18
 2ec:	b1 08       	sbc	r11, r1
 2ee:	a1 14       	cp	r10, r1
 2f0:	b1 04       	cpc	r11, r1
 2f2:	61 f7       	brne	.-40     	; 0x2cc <vfprintf+0x1e4>
 2f4:	f5 c0       	rjmp	.+490    	; 0x4e0 <__EEPROM_REGION_LENGTH__+0xe0>
 2f6:	84 36       	cpi	r24, 0x64	; 100
 2f8:	11 f0       	breq	.+4      	; 0x2fe <vfprintf+0x216>
 2fa:	89 36       	cpi	r24, 0x69	; 105
 2fc:	71 f5       	brne	.+92     	; 0x35a <vfprintf+0x272>
 2fe:	f7 01       	movw	r30, r14
 300:	17 ff       	sbrs	r17, 7
 302:	08 c0       	rjmp	.+16     	; 0x314 <vfprintf+0x22c>
 304:	60 81       	ld	r22, Z
 306:	71 81       	ldd	r23, Z+1	; 0x01
 308:	82 81       	ldd	r24, Z+2	; 0x02
 30a:	93 81       	ldd	r25, Z+3	; 0x03
 30c:	97 01       	movw	r18, r14
 30e:	2c 5f       	subi	r18, 0xFC	; 252
 310:	3f 4f       	sbci	r19, 0xFF	; 255
 312:	09 c0       	rjmp	.+18     	; 0x326 <vfprintf+0x23e>
 314:	60 81       	ld	r22, Z
 316:	71 81       	ldd	r23, Z+1	; 0x01
 318:	07 2e       	mov	r0, r23
 31a:	00 0c       	add	r0, r0
 31c:	88 0b       	sbc	r24, r24
 31e:	99 0b       	sbc	r25, r25
 320:	97 01       	movw	r18, r14
 322:	2e 5f       	subi	r18, 0xFE	; 254
 324:	3f 4f       	sbci	r19, 0xFF	; 255
 326:	79 01       	movw	r14, r18
 328:	1f 76       	andi	r17, 0x6F	; 111
 32a:	31 2e       	mov	r3, r17
 32c:	97 ff       	sbrs	r25, 7
 32e:	0a c0       	rjmp	.+20     	; 0x344 <vfprintf+0x25c>
 330:	90 95       	com	r25
 332:	80 95       	com	r24
 334:	70 95       	com	r23
 336:	61 95       	neg	r22
 338:	7f 4f       	sbci	r23, 0xFF	; 255
 33a:	8f 4f       	sbci	r24, 0xFF	; 255
 33c:	9f 4f       	sbci	r25, 0xFF	; 255
 33e:	31 2f       	mov	r19, r17
 340:	30 68       	ori	r19, 0x80	; 128
 342:	33 2e       	mov	r3, r19
 344:	2a e0       	ldi	r18, 0x0A	; 10
 346:	30 e0       	ldi	r19, 0x00	; 0
 348:	ae 01       	movw	r20, r28
 34a:	4f 5f       	subi	r20, 0xFF	; 255
 34c:	5f 4f       	sbci	r21, 0xFF	; 255
 34e:	0e 94 05 03 	call	0x60a	; 0x60a <__ultoa_invert>
 352:	48 2e       	mov	r4, r24
 354:	4c 85       	ldd	r20, Y+12	; 0x0c
 356:	44 1a       	sub	r4, r20
 358:	4a c0       	rjmp	.+148    	; 0x3ee <vfprintf+0x306>
 35a:	85 37       	cpi	r24, 0x75	; 117
 35c:	29 f4       	brne	.+10     	; 0x368 <vfprintf+0x280>
 35e:	1f 7e       	andi	r17, 0xEF	; 239
 360:	a1 2e       	mov	r10, r17
 362:	2a e0       	ldi	r18, 0x0A	; 10
 364:	30 e0       	ldi	r19, 0x00	; 0
 366:	25 c0       	rjmp	.+74     	; 0x3b2 <vfprintf+0x2ca>
 368:	51 2f       	mov	r21, r17
 36a:	59 7f       	andi	r21, 0xF9	; 249
 36c:	a5 2e       	mov	r10, r21
 36e:	8f 36       	cpi	r24, 0x6F	; 111
 370:	c1 f0       	breq	.+48     	; 0x3a2 <vfprintf+0x2ba>
 372:	18 f4       	brcc	.+6      	; 0x37a <vfprintf+0x292>
 374:	88 35       	cpi	r24, 0x58	; 88
 376:	79 f0       	breq	.+30     	; 0x396 <vfprintf+0x2ae>
 378:	bd c0       	rjmp	.+378    	; 0x4f4 <__EEPROM_REGION_LENGTH__+0xf4>
 37a:	80 37       	cpi	r24, 0x70	; 112
 37c:	19 f0       	breq	.+6      	; 0x384 <vfprintf+0x29c>
 37e:	88 37       	cpi	r24, 0x78	; 120
 380:	21 f0       	breq	.+8      	; 0x38a <vfprintf+0x2a2>
 382:	b8 c0       	rjmp	.+368    	; 0x4f4 <__EEPROM_REGION_LENGTH__+0xf4>
 384:	85 2f       	mov	r24, r21
 386:	80 61       	ori	r24, 0x10	; 16
 388:	a8 2e       	mov	r10, r24
 38a:	a4 fe       	sbrs	r10, 4
 38c:	0d c0       	rjmp	.+26     	; 0x3a8 <vfprintf+0x2c0>
 38e:	9a 2d       	mov	r25, r10
 390:	94 60       	ori	r25, 0x04	; 4
 392:	a9 2e       	mov	r10, r25
 394:	09 c0       	rjmp	.+18     	; 0x3a8 <vfprintf+0x2c0>
 396:	14 ff       	sbrs	r17, 4
 398:	0a c0       	rjmp	.+20     	; 0x3ae <vfprintf+0x2c6>
 39a:	a5 2f       	mov	r26, r21
 39c:	a6 60       	ori	r26, 0x06	; 6
 39e:	aa 2e       	mov	r10, r26
 3a0:	06 c0       	rjmp	.+12     	; 0x3ae <vfprintf+0x2c6>
 3a2:	28 e0       	ldi	r18, 0x08	; 8
 3a4:	30 e0       	ldi	r19, 0x00	; 0
 3a6:	05 c0       	rjmp	.+10     	; 0x3b2 <vfprintf+0x2ca>
 3a8:	20 e1       	ldi	r18, 0x10	; 16
 3aa:	30 e0       	ldi	r19, 0x00	; 0
 3ac:	02 c0       	rjmp	.+4      	; 0x3b2 <vfprintf+0x2ca>
 3ae:	20 e1       	ldi	r18, 0x10	; 16
 3b0:	32 e0       	ldi	r19, 0x02	; 2
 3b2:	f7 01       	movw	r30, r14
 3b4:	a7 fe       	sbrs	r10, 7
 3b6:	08 c0       	rjmp	.+16     	; 0x3c8 <vfprintf+0x2e0>
 3b8:	60 81       	ld	r22, Z
 3ba:	71 81       	ldd	r23, Z+1	; 0x01
 3bc:	82 81       	ldd	r24, Z+2	; 0x02
 3be:	93 81       	ldd	r25, Z+3	; 0x03
 3c0:	a7 01       	movw	r20, r14
 3c2:	4c 5f       	subi	r20, 0xFC	; 252
 3c4:	5f 4f       	sbci	r21, 0xFF	; 255
 3c6:	07 c0       	rjmp	.+14     	; 0x3d6 <vfprintf+0x2ee>
 3c8:	60 81       	ld	r22, Z
 3ca:	71 81       	ldd	r23, Z+1	; 0x01
 3cc:	80 e0       	ldi	r24, 0x00	; 0
 3ce:	90 e0       	ldi	r25, 0x00	; 0
 3d0:	a7 01       	movw	r20, r14
 3d2:	4e 5f       	subi	r20, 0xFE	; 254
 3d4:	5f 4f       	sbci	r21, 0xFF	; 255
 3d6:	7a 01       	movw	r14, r20
 3d8:	ae 01       	movw	r20, r28
 3da:	4f 5f       	subi	r20, 0xFF	; 255
 3dc:	5f 4f       	sbci	r21, 0xFF	; 255
 3de:	0e 94 05 03 	call	0x60a	; 0x60a <__ultoa_invert>
 3e2:	48 2e       	mov	r4, r24
 3e4:	5c 85       	ldd	r21, Y+12	; 0x0c
 3e6:	45 1a       	sub	r4, r21
 3e8:	8a 2d       	mov	r24, r10
 3ea:	8f 77       	andi	r24, 0x7F	; 127
 3ec:	38 2e       	mov	r3, r24
 3ee:	36 fe       	sbrs	r3, 6
 3f0:	0d c0       	rjmp	.+26     	; 0x40c <__EEPROM_REGION_LENGTH__+0xc>
 3f2:	93 2d       	mov	r25, r3
 3f4:	9e 7f       	andi	r25, 0xFE	; 254
 3f6:	a9 2e       	mov	r10, r25
 3f8:	4b 14       	cp	r4, r11
 3fa:	58 f4       	brcc	.+22     	; 0x412 <__EEPROM_REGION_LENGTH__+0x12>
 3fc:	34 fe       	sbrs	r3, 4
 3fe:	0b c0       	rjmp	.+22     	; 0x416 <__EEPROM_REGION_LENGTH__+0x16>
 400:	32 fc       	sbrc	r3, 2
 402:	09 c0       	rjmp	.+18     	; 0x416 <__EEPROM_REGION_LENGTH__+0x16>
 404:	a3 2d       	mov	r26, r3
 406:	ae 7e       	andi	r26, 0xEE	; 238
 408:	aa 2e       	mov	r10, r26
 40a:	05 c0       	rjmp	.+10     	; 0x416 <__EEPROM_REGION_LENGTH__+0x16>
 40c:	14 2d       	mov	r17, r4
 40e:	a3 2c       	mov	r10, r3
 410:	03 c0       	rjmp	.+6      	; 0x418 <__EEPROM_REGION_LENGTH__+0x18>
 412:	14 2d       	mov	r17, r4
 414:	01 c0       	rjmp	.+2      	; 0x418 <__EEPROM_REGION_LENGTH__+0x18>
 416:	1b 2d       	mov	r17, r11
 418:	a4 fe       	sbrs	r10, 4
 41a:	0e c0       	rjmp	.+28     	; 0x438 <__EEPROM_REGION_LENGTH__+0x38>
 41c:	fe 01       	movw	r30, r28
 41e:	e4 0d       	add	r30, r4
 420:	f1 1d       	adc	r31, r1
 422:	80 81       	ld	r24, Z
 424:	80 33       	cpi	r24, 0x30	; 48
 426:	21 f4       	brne	.+8      	; 0x430 <__EEPROM_REGION_LENGTH__+0x30>
 428:	ea 2d       	mov	r30, r10
 42a:	e9 7e       	andi	r30, 0xE9	; 233
 42c:	ae 2e       	mov	r10, r30
 42e:	08 c0       	rjmp	.+16     	; 0x440 <__EEPROM_REGION_LENGTH__+0x40>
 430:	a2 fe       	sbrs	r10, 2
 432:	05 c0       	rjmp	.+10     	; 0x43e <__EEPROM_REGION_LENGTH__+0x3e>
 434:	1e 5f       	subi	r17, 0xFE	; 254
 436:	04 c0       	rjmp	.+8      	; 0x440 <__EEPROM_REGION_LENGTH__+0x40>
 438:	8a 2d       	mov	r24, r10
 43a:	86 78       	andi	r24, 0x86	; 134
 43c:	09 f0       	breq	.+2      	; 0x440 <__EEPROM_REGION_LENGTH__+0x40>
 43e:	1f 5f       	subi	r17, 0xFF	; 255
 440:	a3 fc       	sbrc	r10, 3
 442:	11 c0       	rjmp	.+34     	; 0x466 <__EEPROM_REGION_LENGTH__+0x66>
 444:	a0 fe       	sbrs	r10, 0
 446:	06 c0       	rjmp	.+12     	; 0x454 <__EEPROM_REGION_LENGTH__+0x54>
 448:	10 17       	cp	r17, r16
 44a:	88 f4       	brcc	.+34     	; 0x46e <__EEPROM_REGION_LENGTH__+0x6e>
 44c:	04 0d       	add	r16, r4
 44e:	b0 2e       	mov	r11, r16
 450:	b1 1a       	sub	r11, r17
 452:	0e c0       	rjmp	.+28     	; 0x470 <__EEPROM_REGION_LENGTH__+0x70>
 454:	10 17       	cp	r17, r16
 456:	60 f4       	brcc	.+24     	; 0x470 <__EEPROM_REGION_LENGTH__+0x70>
 458:	b6 01       	movw	r22, r12
 45a:	80 e2       	ldi	r24, 0x20	; 32
 45c:	90 e0       	ldi	r25, 0x00	; 0
 45e:	0e 94 b4 03 	call	0x768	; 0x768 <fputc>
 462:	1f 5f       	subi	r17, 0xFF	; 255
 464:	f7 cf       	rjmp	.-18     	; 0x454 <__EEPROM_REGION_LENGTH__+0x54>
 466:	10 17       	cp	r17, r16
 468:	18 f4       	brcc	.+6      	; 0x470 <__EEPROM_REGION_LENGTH__+0x70>
 46a:	01 1b       	sub	r16, r17
 46c:	02 c0       	rjmp	.+4      	; 0x472 <__EEPROM_REGION_LENGTH__+0x72>
 46e:	b4 2c       	mov	r11, r4
 470:	00 e0       	ldi	r16, 0x00	; 0
 472:	a4 fe       	sbrs	r10, 4
 474:	10 c0       	rjmp	.+32     	; 0x496 <__EEPROM_REGION_LENGTH__+0x96>
 476:	b6 01       	movw	r22, r12
 478:	80 e3       	ldi	r24, 0x30	; 48
 47a:	90 e0       	ldi	r25, 0x00	; 0
 47c:	0e 94 b4 03 	call	0x768	; 0x768 <fputc>
 480:	a2 fe       	sbrs	r10, 2
 482:	17 c0       	rjmp	.+46     	; 0x4b2 <__EEPROM_REGION_LENGTH__+0xb2>
 484:	a1 fc       	sbrc	r10, 1
 486:	03 c0       	rjmp	.+6      	; 0x48e <__EEPROM_REGION_LENGTH__+0x8e>
 488:	88 e7       	ldi	r24, 0x78	; 120
 48a:	90 e0       	ldi	r25, 0x00	; 0
 48c:	02 c0       	rjmp	.+4      	; 0x492 <__EEPROM_REGION_LENGTH__+0x92>
 48e:	88 e5       	ldi	r24, 0x58	; 88
 490:	90 e0       	ldi	r25, 0x00	; 0
 492:	b6 01       	movw	r22, r12
 494:	0c c0       	rjmp	.+24     	; 0x4ae <__EEPROM_REGION_LENGTH__+0xae>
 496:	8a 2d       	mov	r24, r10
 498:	86 78       	andi	r24, 0x86	; 134
 49a:	59 f0       	breq	.+22     	; 0x4b2 <__EEPROM_REGION_LENGTH__+0xb2>
 49c:	a1 fe       	sbrs	r10, 1
 49e:	02 c0       	rjmp	.+4      	; 0x4a4 <__EEPROM_REGION_LENGTH__+0xa4>
 4a0:	8b e2       	ldi	r24, 0x2B	; 43
 4a2:	01 c0       	rjmp	.+2      	; 0x4a6 <__EEPROM_REGION_LENGTH__+0xa6>
 4a4:	80 e2       	ldi	r24, 0x20	; 32
 4a6:	a7 fc       	sbrc	r10, 7
 4a8:	8d e2       	ldi	r24, 0x2D	; 45
 4aa:	b6 01       	movw	r22, r12
 4ac:	90 e0       	ldi	r25, 0x00	; 0
 4ae:	0e 94 b4 03 	call	0x768	; 0x768 <fputc>
 4b2:	4b 14       	cp	r4, r11
 4b4:	38 f4       	brcc	.+14     	; 0x4c4 <__EEPROM_REGION_LENGTH__+0xc4>
 4b6:	b6 01       	movw	r22, r12
 4b8:	80 e3       	ldi	r24, 0x30	; 48
 4ba:	90 e0       	ldi	r25, 0x00	; 0
 4bc:	0e 94 b4 03 	call	0x768	; 0x768 <fputc>
 4c0:	ba 94       	dec	r11
 4c2:	f7 cf       	rjmp	.-18     	; 0x4b2 <__EEPROM_REGION_LENGTH__+0xb2>
 4c4:	4a 94       	dec	r4
 4c6:	e1 e0       	ldi	r30, 0x01	; 1
 4c8:	f0 e0       	ldi	r31, 0x00	; 0
 4ca:	ec 0f       	add	r30, r28
 4cc:	fd 1f       	adc	r31, r29
 4ce:	e4 0d       	add	r30, r4
 4d0:	f1 1d       	adc	r31, r1
 4d2:	80 81       	ld	r24, Z
 4d4:	b6 01       	movw	r22, r12
 4d6:	90 e0       	ldi	r25, 0x00	; 0
 4d8:	0e 94 b4 03 	call	0x768	; 0x768 <fputc>
 4dc:	41 10       	cpse	r4, r1
 4de:	f2 cf       	rjmp	.-28     	; 0x4c4 <__EEPROM_REGION_LENGTH__+0xc4>
 4e0:	00 23       	and	r16, r16
 4e2:	09 f4       	brne	.+2      	; 0x4e6 <__EEPROM_REGION_LENGTH__+0xe6>
 4e4:	30 ce       	rjmp	.-928    	; 0x146 <vfprintf+0x5e>
 4e6:	b6 01       	movw	r22, r12
 4e8:	80 e2       	ldi	r24, 0x20	; 32
 4ea:	90 e0       	ldi	r25, 0x00	; 0
 4ec:	0e 94 b4 03 	call	0x768	; 0x768 <fputc>
 4f0:	01 50       	subi	r16, 0x01	; 1
 4f2:	f6 cf       	rjmp	.-20     	; 0x4e0 <__EEPROM_REGION_LENGTH__+0xe0>
 4f4:	f6 01       	movw	r30, r12
 4f6:	87 81       	ldd	r24, Z+7	; 0x07
 4f8:	90 85       	ldd	r25, Z+8	; 0x08
 4fa:	02 c0       	rjmp	.+4      	; 0x500 <__EEPROM_REGION_LENGTH__+0x100>
 4fc:	8f ef       	ldi	r24, 0xFF	; 255
 4fe:	9f ef       	ldi	r25, 0xFF	; 255
 500:	62 96       	adiw	r28, 0x12	; 18
 502:	0f b6       	in	r0, 0x3f	; 63
 504:	f8 94       	cli
 506:	de bf       	out	0x3e, r29	; 62
 508:	0f be       	out	0x3f, r0	; 63
 50a:	cd bf       	out	0x3d, r28	; 61
 50c:	df 91       	pop	r29
 50e:	cf 91       	pop	r28
 510:	1f 91       	pop	r17
 512:	0f 91       	pop	r16
 514:	ff 90       	pop	r15
 516:	ef 90       	pop	r14
 518:	df 90       	pop	r13
 51a:	cf 90       	pop	r12
 51c:	bf 90       	pop	r11
 51e:	af 90       	pop	r10
 520:	9f 90       	pop	r9
 522:	8f 90       	pop	r8
 524:	7f 90       	pop	r7
 526:	6f 90       	pop	r6
 528:	4f 90       	pop	r4
 52a:	3f 90       	pop	r3
 52c:	2f 90       	pop	r2
 52e:	08 95       	ret

Disassembly of section .text.avrlibc:

00000818 <strnlen>:
 818:	cf 92       	push	r12
 81a:	df 92       	push	r13
 81c:	ef 92       	push	r14
 81e:	6b 01       	movw	r12, r22
 820:	e8 2e       	mov	r14, r24
 822:	a8 2f       	mov	r26, r24
 824:	cb 01       	movw	r24, r22
 826:	41 15       	cp	r20, r1
 828:	51 05       	cpc	r21, r1
 82a:	31 f4       	brne	.+12     	; 0x838 <strnlen+0x20>
 82c:	8c 19       	sub	r24, r12
 82e:	9d 09       	sbc	r25, r13
 830:	ef 90       	pop	r14
 832:	df 90       	pop	r13
 834:	cf 90       	pop	r12
 836:	08 95       	ret
 838:	fc 01       	movw	r30, r24
 83a:	24 91       	lpm	r18, Z
 83c:	a7 fd       	sbrc	r26, 7
 83e:	20 81       	ld	r18, Z
 840:	22 23       	and	r18, r18
 842:	a1 f3       	breq	.-24     	; 0x82c <strnlen+0x14>
 844:	01 96       	adiw	r24, 0x01	; 1
 846:	a1 1d       	adc	r26, r1
 848:	41 50       	subi	r20, 0x01	; 1
 84a:	51 09       	sbc	r21, r1
 84c:	ec cf       	rjmp	.-40     	; 0x826 <strnlen+0xe>

Disassembly of section .text.avrlibc:

00000768 <fputc>:
 768:	0f 93       	push	r16
 76a:	1f 93       	push	r17
 76c:	cf 93       	push	r28
 76e:	df 93       	push	r29
 770:	fb 01       	movw	r30, r22
 772:	24 81       	ldd	r18, Z+4	; 0x04
 774:	21 fd       	sbrc	r18, 1
 776:	03 c0       	rjmp	.+6      	; 0x77e <fputc+0x16>
 778:	8f ef       	ldi	r24, 0xFF	; 255
 77a:	9f ef       	ldi	r25, 0xFF	; 255
 77c:	2c c0       	rjmp	.+88     	; 0x7d6 <fputc+0x6e>
 77e:	22 ff       	sbrs	r18, 2
 780:	16 c0       	rjmp	.+44     	; 0x7ae <fputc+0x46>
 782:	47 81       	ldd	r20, Z+7	; 0x07
 784:	50 85       	ldd	r21, Z+8	; 0x08
 786:	25 81       	ldd	r18, Z+5	; 0x05
 788:	36 81       	ldd	r19, Z+6	; 0x06
 78a:	42 17       	cp	r20, r18
 78c:	53 07       	cpc	r21, r19
 78e:	44 f4       	brge	.+16     	; 0x7a0 <fputc+0x38>
 790:	a0 81       	ld	r26, Z
 792:	b1 81       	ldd	r27, Z+1	; 0x01
 794:	9d 01       	movw	r18, r26
 796:	2f 5f       	subi	r18, 0xFF	; 255
 798:	3f 4f       	sbci	r19, 0xFF	; 255
 79a:	31 83       	std	Z+1, r19	; 0x01
 79c:	20 83       	st	Z, r18
 79e:	8c 93       	st	X, r24
 7a0:	27 81       	ldd	r18, Z+7	; 0x07
 7a2:	30 85       	ldd	r19, Z+8	; 0x08
 7a4:	2f 5f       	subi	r18, 0xFF	; 255
 7a6:	3f 4f       	sbci	r19, 0xFF	; 255
 7a8:	30 87       	std	Z+8, r19	; 0x08
 7aa:	27 83       	std	Z+7, r18	; 0x07
 7ac:	14 c0       	rjmp	.+40     	; 0x7d6 <fputc+0x6e>
 7ae:	8b 01       	movw	r16, r22
 7b0:	ec 01       	movw	r28, r24
 7b2:	fb 01       	movw	r30, r22
 7b4:	01 84       	ldd	r0, Z+9	; 0x09
 7b6:	f2 85       	ldd	r31, Z+10	; 0x0a
 7b8:	e0 2d       	mov	r30, r0
 7ba:	09 95       	icall
 7bc:	89 2b       	or	r24, r25
 7be:	e1 f6       	brne	.-72     	; 0x778 <fputc+0x10>
 7c0:	d8 01       	movw	r26, r16
 7c2:	17 96       	adiw	r26, 0x07	; 7
 7c4:	8d 91       	ld	r24, X+
 7c6:	9c 91       	ld	r25, X
 7c8:	18 97       	sbiw	r26, 0x08	; 8
 7ca:	01 96       	adiw	r24, 0x01	; 1
 7cc:	18 96       	adiw	r26, 0x08	; 8
 7ce:	9c 93       	st	X, r25
 7d0:	8e 93       	st	-X, r24
 7d2:	17 97       	sbiw	r26, 0x07	; 7
 7d4:	ce 01       	movw	r24, r28
 7d6:	df 91       	pop	r29
 7d8:	cf 91       	pop	r28
 7da:	1f 91       	pop	r17
 7dc:	0f 91       	pop	r16
 7de:	08 95       	ret

Disassembly of section .text.avrlibc:

0000060a <__ultoa_invert>:
 60a:	fa 01       	movw	r30, r20
 60c:	aa 27       	eor	r26, r26
 60e:	28 30       	cpi	r18, 0x08	; 8
 610:	51 f1       	breq	.+84     	; 0x666 <__ultoa_invert+0x5c>
 612:	20 31       	cpi	r18, 0x10	; 16
 614:	81 f1       	breq	.+96     	; 0x676 <__ultoa_invert+0x6c>
 616:	e8 94       	clt
 618:	6f 93       	push	r22
 61a:	6e 7f       	andi	r22, 0xFE	; 254
 61c:	6e 5f       	subi	r22, 0xFE	; 254
 61e:	7f 4f       	sbci	r23, 0xFF	; 255
 620:	8f 4f       	sbci	r24, 0xFF	; 255
 622:	9f 4f       	sbci	r25, 0xFF	; 255
 624:	af 4f       	sbci	r26, 0xFF	; 255
 626:	b1 e0       	ldi	r27, 0x01	; 1
 628:	3e d0       	rcall	.+124    	; 0x6a6 <__ultoa_invert+0x9c>
 62a:	b4 e0       	ldi	r27, 0x04	; 4
 62c:	3c d0       	rcall	.+120    	; 0x6a6 <__ultoa_invert+0x9c>
 62e:	67 0f       	add	r22, r23
 630:	78 1f       	adc	r23, r24
 632:	89 1f       	adc	r24, r25
 634:	9a 1f       	adc	r25, r26
 636:	a1 1d       	adc	r26, r1
 638:	68 0f       	add	r22, r24
 63a:	79 1f       	adc	r23, r25
 63c:	8a 1f       	adc	r24, r26
 63e:	91 1d       	adc	r25, r1
 640:	a1 1d       	adc	r26, r1
 642:	6a 0f       	add	r22, r26
 644:	71 1d       	adc	r23, r1
 646:	81 1d       	adc	r24, r1
 648:	91 1d       	adc	r25, r1
 64a:	a1 1d       	adc	r26, r1
 64c:	20 d0       	rcall	.+64     	; 0x68e <__ultoa_invert+0x84>
 64e:	09 f4       	brne	.+2      	; 0x652 <__ultoa_invert+0x48>
 650:	68 94       	set
 652:	3f 91       	pop	r19
 654:	2a e0       	ldi	r18, 0x0A	; 10
 656:	26 9f       	mul	r18, r22
 658:	11 24       	eor	r1, r1
 65a:	30 19       	sub	r19, r0
 65c:	30 5d       	subi	r19, 0xD0	; 208
 65e:	31 93       	st	Z+, r19
 660:	de f6       	brtc	.-74     	; 0x618 <__ultoa_invert+0xe>
 662:	cf 01       	movw	r24, r30
 664:	08 95       	ret
 666:	46 2f       	mov	r20, r22
 668:	47 70       	andi	r20, 0x07	; 7
 66a:	40 5d       	subi	r20, 0xD0	; 208
 66c:	41 93       	st	Z+, r20
 66e:	b3 e0       	ldi	r27, 0x03	; 3
 670:	0f d0       	rcall	.+30     	; 0x690 <__ultoa_invert+0x86>
 672:	c9 f7       	brne	.-14     	; 0x666 <__ultoa_invert+0x5c>
 674:	f6 cf       	rjmp	.-20     	; 0x662 <__ultoa_invert+0x58>
 676:	46 2f       	mov	r20, r22
 678:	4f 70       	andi	r20, 0x0F	; 15
 67a:	40 5d       	subi	r20, 0xD0	; 208
 67c:	4a 33       	cpi	r20, 0x3A	; 58
 67e:	18 f0       	brcs	.+6      	; 0x686 <__ultoa_invert+0x7c>
 680:	49 5d       	subi	r20, 0xD9	; 217
 682:	31 fd       	sbrc	r19, 1
 684:	40 52       	subi	r20, 0x20	; 32
 686:	41 93       	st	Z+, r20
 688:	02 d0       	rcall	.+4      	; 0x68e <__ultoa_invert+0x84>
 68a:	a9 f7       	brne	.-22     	; 0x676 <__ultoa_invert+0x6c>
 68c:	ea cf       	rjmp	.-44     	; 0x662 <__ultoa_invert+0x58>
 68e:	b4 e0       	ldi	r27, 0x04	; 4
 690:	a6 95       	lsr	r26
 692:	97 95       	ror	r25
 694:	87 95       	ror	r24
 696:	77 95       	ror	r23
 698:	67 95       	ror	r22
 69a:	ba 95       	dec	r27
 69c:	c9 f7       	brne	.-14     	; 0x690 <__ultoa_invert+0x86>
 69e:	00 97       	sbiw	r24, 0x00	; 0
 6a0:	61 05       	cpc	r22, r1
 6a2:	71 05       	cpc	r23, r1
 6a4:	08 95       	ret
 6a6:	9b 01       	movw	r18, r22
 6a8:	ac 01       	movw	r20, r24
 6aa:	0a 2e       	mov	r0, r26
 6ac:	06 94       	lsr	r0
 6ae:	57 95       	ror	r21
 6b0:	47 95       	ror	r20
 6b2:	37 95       	ror	r19
 6b4:	27 95       	ror	r18
 6b6:	ba 95       	dec	r27
 6b8:	c9 f7       	brne	.-14     	; 0x6ac <__ultoa_invert+0xa2>
 6ba:	62 0f       	add	r22, r18
 6bc:	73 1f       	adc	r23, r19
 6be:	84 1f       	adc	r24, r20
 6c0:	95 1f       	adc	r25, r21
 6c2:	a0 1d       	adc	r26, r0
 6c4:	08 95       	ret

Disassembly of section .text.libgcc.prologue:

000007e0 <__prologue_saves__>:
 7e0:	2f 92       	push	r2
 7e2:	3f 92       	push	r3
 7e4:	4f 92       	push	r4
 7e6:	5f 92       	push	r5
 7e8:	6f 92       	push	r6
 7ea:	7f 92       	push	r7
 7ec:	8f 92       	push	r8
 7ee:	9f 92       	push	r9
 7f0:	af 92       	push	r10
 7f2:	bf 92       	push	r11
 7f4:	cf 92       	push	r12
 7f6:	df 92       	push	r13
 7f8:	ef 92       	push	r14
 7fa:	ff 92       	push	r15
 7fc:	0f 93       	push	r16
 7fe:	1f 93       	push	r17
 800:	cf 93       	push	r28
 802:	df 93       	push	r29
 804:	cd b7       	in	r28, 0x3d	; 61
 806:	de b7       	in	r29, 0x3e	; 62
 808:	ca 1b       	sub	r28, r26
 80a:	db 0b       	sbc	r29, r27
 80c:	0f b6       	in	r0, 0x3f	; 63
 80e:	f8 94       	cli
 810:	de bf       	out	0x3e, r29	; 62
 812:	0f be       	out	0x3f, r0	; 63
 814:	cd bf       	out	0x3d, r28	; 61
 816:	09 94       	ijmp

Disassembly of section .text.libgcc.prologue:

0000084e <__epilogue_restores__>:
 84e:	2a 88       	ldd	r2, Y+18	; 0x12
 850:	39 88       	ldd	r3, Y+17	; 0x11
 852:	48 88       	ldd	r4, Y+16	; 0x10
 854:	5f 84       	ldd	r5, Y+15	; 0x0f
 856:	6e 84       	ldd	r6, Y+14	; 0x0e
 858:	7d 84       	ldd	r7, Y+13	; 0x0d
 85a:	8c 84       	ldd	r8, Y+12	; 0x0c
 85c:	9b 84       	ldd	r9, Y+11	; 0x0b
 85e:	aa 84       	ldd	r10, Y+10	; 0x0a
 860:	b9 84       	ldd	r11, Y+9	; 0x09
 862:	c8 84       	ldd	r12, Y+8	; 0x08
 864:	df 80       	ldd	r13, Y+7	; 0x07
 866:	ee 80       	ldd	r14, Y+6	; 0x06
 868:	fd 80       	ldd	r15, Y+5	; 0x05
 86a:	0c 81       	ldd	r16, Y+4	; 0x04
 86c:	1b 81       	ldd	r17, Y+3	; 0x03
 86e:	aa 81       	ldd	r26, Y+2	; 0x02
 870:	b9 81       	ldd	r27, Y+1	; 0x01
 872:	ce 0f       	add	r28, r30
 874:	d1 1d       	adc	r29, r1
 876:	0f b6       	in	r0, 0x3f	; 63
 878:	f8 94       	cli
 87a:	de bf       	out	0x3e, r29	; 62
 87c:	0f be       	out	0x3f, r0	; 63
 87e:	cd bf       	out	0x3d, r28	; 61
 880:	ed 01       	movw	r28, r26
 882:	08 95       	ret
